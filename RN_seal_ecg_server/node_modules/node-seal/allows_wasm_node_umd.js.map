{"version":3,"file":"allows_wasm_node_umd.js","sources":["../src/bin/seal_allows_wasm_node.js","../src/main/loader.ts","../src/implementation/constants.ts","../src/implementation/batch-encoder.ts","../src/implementation/cipher-text.ts","../src/implementation/ckks-encoder.ts","../src/implementation/coeff-modulus.ts","../src/implementation/compr-mode-type.ts","../src/implementation/context-data.ts","../src/implementation/context.ts","../src/implementation/decryptor.ts","../src/implementation/encryption-parameters.ts","../src/implementation/encryptor.ts","../src/implementation/evaluator.ts","../src/implementation/exception.ts","../src/implementation/galois-keys.ts","../src/implementation/key-generator.ts","../src/implementation/memory-pool-handle.ts","../src/implementation/modulus.ts","../src/implementation/parms-id-type.ts","../src/implementation/plain-text.ts","../src/implementation/plain-modulus.ts","../src/implementation/public-key.ts","../src/implementation/relin-keys.ts","../src/implementation/scheme-type.ts","../src/implementation/secret-key.ts","../src/implementation/security-level.ts","../src/implementation/vector.ts","../src/allows_wasm_node_umd.ts","../src/main/seal.ts","../src/implementation/seal.ts","../src/implementation/encryption-parameter-qualifiers.ts","../src/implementation/serializable.ts"],"sourcesContent":["\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\n\nvar h;h||(h=typeof Module !== 'undefined' ? Module : {});var aa,ba;h.ready=new Promise(function(a,b){aa=a;ba=b});var u={},w;for(w in h)h.hasOwnProperty(w)&&(u[w]=h[w]);var ca=\"./this.program\";function da(a,b){throw b;}var ea=\"\",fa,ia,ja,ka;ea=__dirname+\"/\";fa=function(a){var b=la(a);if(b)return b;ja||(ja=require(\"fs\"));ka||(ka=require(\"path\"));a=ka.normalize(a);return ja.readFileSync(a,null)};\nia=function(a){a=fa(a);a.buffer||(a=new Uint8Array(a));a.buffer||x(\"Assertion failed: undefined\");return a};1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);process.on(\"uncaughtException\",function(a){if(!(a instanceof ma))throw a;});process.on(\"unhandledRejection\",x);da=function(a){process.exit(a)};h.inspect=function(){return\"[Emscripten Module object]\"};h.print||console.log.bind(console);var z=h.printErr||console.warn.bind(console);\nfor(w in u)u.hasOwnProperty(w)&&(h[w]=u[w]);u=null;h.thisProgram&&(ca=h.thisProgram);h.quit&&(da=h.quit);var na;h.wasmBinary&&(na=h.wasmBinary);var noExitRuntime=h.noExitRuntime||!0;\"object\"!==typeof WebAssembly&&x(\"no native wasm support detected\");var oa,pa=!1,qa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ra(a,b){a>>>=0;if(a){var c=A;a>>>=0;var d=a+b;for(b=a;c[b>>>0]&&!(b>=d);)++b;if(16<b-a&&c.subarray&&qa)c=qa.decode(c.subarray(a>>>0,b>>>0));else{for(d=\"\";a<b;){var e=c[a++>>>0];if(e&128){var g=c[a++>>>0]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|g);else{var l=c[a++>>>0]&63;e=224==(e&240)?(e&15)<<12|g<<6|l:(e&7)<<18|g<<12|l<<6|c[a++>>>0]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}c=d}}else c=\"\";\nreturn c}function sa(a,b,c,d){c>>>=0;if(0<d){d=c+d-1;for(var e=0;e<a.length;++e){var g=a.charCodeAt(e);if(55296<=g&&57343>=g){var l=a.charCodeAt(++e);g=65536+((g&1023)<<10)|l&1023}if(127>=g){if(c>=d)break;b[c++>>>0]=g}else{if(2047>=g){if(c+1>=d)break;b[c++>>>0]=192|g>>6}else{if(65535>=g){if(c+2>=d)break;b[c++>>>0]=224|g>>12}else{if(c+3>=d)break;b[c++>>>0]=240|g>>18;b[c++>>>0]=128|g>>12&63}b[c++>>>0]=128|g>>6&63}b[c++>>>0]=128|g&63}}b[c>>>0]=0}}\nfunction ta(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var ua=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function va(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&B[c>>>0];)++c;c<<=1;if(32<c-a&&ua)return ua.decode(A.subarray(a>>>0,c>>>0));c=\"\";for(d=0;!(d>=b/2);++d){var e=C[a+2*d>>1>>>0];if(0==e)break;c+=String.fromCharCode(e)}return c}\nfunction wa(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)C[b>>1>>>0]=a.charCodeAt(e),b+=2;C[b>>1>>>0]=0;return b-d}function xa(a){return 2*a.length}function ya(a,b){for(var c=0,d=\"\";!(c>=b/4);){var e=D[a+4*c>>2>>>0];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}\nfunction za(a,b,c){b>>>=0;void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var g=a.charCodeAt(e);if(55296<=g&&57343>=g){var l=a.charCodeAt(++e);g=65536+((g&1023)<<10)|l&1023}D[b>>2>>>0]=g;b+=4;if(b+4>c)break}D[b>>2>>>0]=0;return b-d}function Aa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}var Ba,E,A,C,B,D,F,Ca,Da;\nfunction Ea(){var a=oa.buffer;Ba=a;h.HEAP8=E=new Int8Array(a);h.HEAP16=C=new Int16Array(a);h.HEAP32=D=new Int32Array(a);h.HEAPU8=A=new Uint8Array(a);h.HEAPU16=B=new Uint16Array(a);h.HEAPU32=F=new Uint32Array(a);h.HEAPF32=Ca=new Float32Array(a);h.HEAPF64=Da=new Float64Array(a)}var H,Fa=[],Ga=[],Ha=[],Ia=[];function Ja(){var a=h.preRun.shift();Fa.unshift(a)}var I=0,Ka=null,La=null;h.preloadedImages={};h.preloadedAudios={};\nfunction x(a){if(h.onAbort)h.onAbort(a);z(a);pa=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ma(a){var b=Na;return String.prototype.startsWith?a.startsWith(b):0===a.indexOf(b)}var Na=\"data:application/octet-stream;base64,\",J=\"data:application/octet-stream;base64,\";if(!Ma(J)){var Oa=J;J=h.locateFile?h.locateFile(Oa,ea):ea+Oa}\nfunction Pa(){var a=J;try{if(a==J&&na)return new Uint8Array(na);var b=la(a);if(b)return b;if(ia)return ia(a);throw\"both async and sync fetching of the wasm failed\";}catch(c){x(c)}}function Qa(){return Promise.resolve().then(function(){return Pa()})}function Ra(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(h);else{var c=b.Ya;\"number\"===typeof c?void 0===b.xa?H.get(c)():H.get(c)(b.xa):c(void 0===b.xa?null:b.xa)}}}\nfunction Sa(a){this.aa=a-16;this.Sa=function(b){D[this.aa+8>>2>>>0]=b};this.Pa=function(b){D[this.aa+0>>2>>>0]=b};this.Qa=function(){D[this.aa+4>>2>>>0]=0};this.Oa=function(){E[this.aa+12>>0>>>0]=0};this.Ra=function(){E[this.aa+13>>0>>>0]=0};this.Ia=function(b,c){this.Sa(b);this.Pa(c);this.Qa();this.Oa();this.Ra()}}var Ta=0;function Ua(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var Va=void 0;\nfunction K(a){for(var b=\"\";A[a>>>0];)b+=Va[A[a++>>>0]];return b}var L={},M={},Wa={};function Xa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}function Ya(a,b){a=Xa(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}\nfunction Za(a){var b=Error,c=Ya(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var O=void 0;function P(a){throw new O(a);}var $a=void 0;function ab(a){throw new $a(a);}\nfunction Q(a,b,c){function d(k){k=c(k);k.length!==a.length&&ab(\"Mismatched type converter count\");for(var m=0;m<a.length;++m)R(a[m],k[m])}a.forEach(function(k){Wa[k]=b});var e=Array(b.length),g=[],l=0;b.forEach(function(k,m){M.hasOwnProperty(k)?e[m]=M[k]:(g.push(k),L.hasOwnProperty(k)||(L[k]=[]),L[k].push(function(){e[m]=M[k];++l;l===g.length&&d(e)}))});0===g.length&&d(e)}\nfunction R(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||P('type \"'+d+'\" must have a positive integer typeid pointer');if(M.hasOwnProperty(a)){if(c.Ha)return;P(\"Cannot register type '\"+d+\"' twice\")}M[a]=b;delete Wa[a];L.hasOwnProperty(a)&&(b=L[a],delete L[a],b.forEach(function(e){e()}))}function bb(a){P(a.Z.ba.$.name+\" instance already deleted\")}var cb=!1;function db(){}\nfunction eb(a){--a.count.value;0===a.count.value&&(a.fa?a.ga.la(a.fa):a.ba.$.la(a.aa))}function fb(a){if(\"undefined\"===typeof FinalizationGroup)return fb=function(b){return b},a;cb=new FinalizationGroup(function(b){for(var c=b.next();!c.done;c=b.next())c=c.value,c.aa?eb(c):console.warn(\"object already deleted: \"+c.aa)});fb=function(b){cb.register(b,b.Z,b.Z);return b};db=function(b){cb.unregister(b.Z)};return fb(a)}var gb=void 0,hb=[];\nfunction ib(){for(;hb.length;){var a=hb.pop();a.Z.na=!1;a[\"delete\"]()}}function S(){}var jb={};function kb(a,b,c){if(void 0===a[b].da){var d=a[b];a[b]=function(){a[b].da.hasOwnProperty(arguments.length)||P(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+a[b].da+\")!\");return a[b].da[arguments.length].apply(this,arguments)};a[b].da=[];a[b].da[d.ma]=d}}\nfunction lb(a,b,c){h.hasOwnProperty(a)?((void 0===c||void 0!==h[a].da&&void 0!==h[a].da[c])&&P(\"Cannot register public name '\"+a+\"' twice\"),kb(h,a,a),h.hasOwnProperty(c)&&P(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),h[a].da[c]=b):(h[a]=b,void 0!==c&&(h[a].Za=c))}function mb(a,b,c,d,e,g,l,k){this.name=a;this.constructor=b;this.ja=c;this.la=d;this.ha=e;this.Fa=g;this.ra=l;this.Ea=k;this.La=[]}\nfunction nb(a,b,c){for(;b!==c;)b.ra||P(\"Expected null or instance of \"+c.name+\", got an instance of \"+b.name),a=b.ra(a),b=b.ha;return a}function ob(a,b){if(null===b)return this.ya&&P(\"null is not a valid \"+this.name),0;b.Z||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.Z.aa||P(\"Cannot pass deleted object as a pointer of type \"+this.name);return nb(b.Z.aa,b.Z.ba.$,this.$)}\nfunction pb(a,b){if(null===b){this.ya&&P(\"null is not a valid \"+this.name);if(this.ta){var c=this.Ma();null!==a&&a.push(this.la,c);return c}return 0}b.Z||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.Z.aa||P(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.sa&&b.Z.ba.sa&&P(\"Cannot convert argument of type \"+(b.Z.ga?b.Z.ga.name:b.Z.ba.name)+\" to parameter type \"+this.name);c=nb(b.Z.aa,b.Z.ba.$,this.$);if(this.ta)switch(void 0===b.Z.fa&&P(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Ta){case 0:b.Z.ga===this?c=b.Z.fa:P(\"Cannot convert argument of type \"+(b.Z.ga?b.Z.ga.name:b.Z.ba.name)+\" to parameter type \"+this.name);break;case 1:c=b.Z.fa;break;case 2:if(b.Z.ga===this)c=b.Z.fa;else{var d=b.clone();c=this.Na(c,U(function(){d[\"delete\"]()}));null!==a&&a.push(this.la,c)}break;default:P(\"Unsupporting sharing policy\")}return c}\nfunction qb(a,b){if(null===b)return this.ya&&P(\"null is not a valid \"+this.name),0;b.Z||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.Z.aa||P(\"Cannot pass deleted object as a pointer of type \"+this.name);b.Z.ba.sa&&P(\"Cannot convert argument of type \"+b.Z.ba.name+\" to parameter type \"+this.name);return nb(b.Z.aa,b.Z.ba.$,this.$)}function rb(a){return this.fromWireType(F[a>>>2])}function sb(a,b,c){if(b===c)return a;if(void 0===c.ha)return null;a=sb(a,b,c.ha);return null===a?null:c.Ea(a)}var tb={};\nfunction ub(a,b){for(void 0===b&&P(\"ptr should not be undefined\");a.ha;)b=a.ra(b),a=a.ha;return tb[b]}function vb(a,b){b.ba&&b.aa||ab(\"makeClassHandle requires ptr and ptrType\");!!b.ga!==!!b.fa&&ab(\"Both smartPtrType and smartPtr must be specified\");b.count={value:1};return fb(Object.create(a,{Z:{value:b}}))}\nfunction V(a,b,c,d){this.name=a;this.$=b;this.ya=c;this.sa=d;this.ta=!1;this.la=this.Na=this.Ma=this.Ca=this.Ta=this.Ka=void 0;void 0!==b.ha?this.toWireType=pb:(this.toWireType=d?ob:qb,this.ia=null)}function wb(a,b,c){h.hasOwnProperty(a)||ab(\"Replacing nonexistant public symbol\");void 0!==h[a].da&&void 0!==c?h[a].da[c]=b:(h[a]=b,h[a].ma=c)}\nfunction xb(a,b){var c=[];return function(){c.length=arguments.length;for(var d=0;d<arguments.length;d++)c[d]=arguments[d];-1!=a.indexOf(\"j\")?(d=h[\"dynCall_\"+a],d=c&&c.length?d.apply(null,[b].concat(c)):d.call(null,b)):d=H.get(b).apply(null,c);return d}}function W(a,b){a=K(a);var c=-1!=a.indexOf(\"j\")?xb(a,b):H.get(b);\"function\"!==typeof c&&P(\"unknown function pointer with signature \"+a+\": \"+b);return c}var yb=void 0;function zb(a){a=Ab(a);var b=K(a);X(a);return b}\nfunction Y(a,b){function c(g){e[g]||M[g]||(Wa[g]?Wa[g].forEach(c):(d.push(g),e[g]=!0))}var d=[],e={};b.forEach(c);throw new yb(a+\": \"+d.map(zb).join([\", \"]));}function Bb(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=Ya(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}function Cb(a){for(;a.length;){var b=a.pop();a.pop()(b)}}\nfunction Db(a,b,c,d,e){var g=b.length;2>g&&P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var l=null!==b[1]&&null!==c,k=!1;for(c=1;c<b.length;++c)if(null!==b[c]&&void 0===b[c].ia){k=!0;break}var m=\"void\"!==b[0].name,p=\"\",n=\"\";for(c=0;c<g-2;++c)p+=(0!==c?\", \":\"\")+\"arg\"+c,n+=(0!==c?\", \":\"\")+\"arg\"+c+\"Wired\";a=\"return function \"+Xa(a)+\"(\"+p+\") {\\nif (arguments.length !== \"+(g-2)+\") {\\nthrowBindingError('function \"+a+\" called with ' + arguments.length + ' arguments, expected \"+\n(g-2)+\" args!');\\n}\\n\";k&&(a+=\"var destructors = [];\\n\");var r=k?\"destructors\":\"null\";p=\"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");d=[P,d,e,Cb,b[0],b[1]];l&&(a+=\"var thisWired = classParam.toWireType(\"+r+\", this);\\n\");for(c=0;c<g-2;++c)a+=\"var arg\"+c+\"Wired = argType\"+c+\".toWireType(\"+r+\", arg\"+c+\"); // \"+b[c+2].name+\"\\n\",p.push(\"argType\"+c),d.push(b[c+2]);l&&(n=\"thisWired\"+(0<n.length?\", \":\"\")+n);a+=(m?\"var rv = \":\"\")+\"invoker(fn\"+(0<n.length?\", \":\"\")+n+\");\\n\";if(k)a+=\n\"runDestructors(destructors);\\n\";else for(c=l?1:2;c<b.length;++c)g=1===c?\"thisWired\":\"arg\"+(c-2)+\"Wired\",null!==b[c].ia&&(a+=g+\"_dtor(\"+g+\"); // \"+b[c].name+\"\\n\",p.push(g+\"_dtor\"),d.push(b[c].ia));m&&(a+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");p.push(a+\"}\\n\");return Bb(p).apply(null,d)}function Eb(a,b){for(var c=[],d=0;d<a;d++)c.push(D[(b>>2)+d>>>0]);return c}\nfunction Fb(a,b,c){a instanceof Object||P(c+' with invalid \"this\": '+a);a instanceof b.$.constructor||P(c+' incompatible with \"this\" of type '+a.constructor.name);a.Z.aa||P(\"cannot call emscripten binding method \"+c+\" on deleted object\");return nb(a.Z.aa,a.Z.ba.$,b.$)}var Gb=[],Z=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Hb(a){4<a&&0===--Z[a].za&&(Z[a]=void 0,Gb.push(a))}\nfunction U(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=Gb.length?Gb.pop():Z.length;Z[b]={za:1,value:a};return b}}function Jb(a,b,c){switch(b){case 0:return function(d){return this.fromWireType((c?E:A)[d>>>0])};case 1:return function(d){return this.fromWireType((c?C:B)[d>>>1])};case 2:return function(d){return this.fromWireType((c?D:F)[d>>>2])};default:throw new TypeError(\"Unknown integer type: \"+a);}}\nfunction Kb(a,b){var c=M[a];void 0===c&&P(b+\" has unknown type \"+zb(a));return c}function T(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}function Lb(a,b){switch(b){case 2:return function(c){return this.fromWireType(Ca[c>>>2])};case 3:return function(c){return this.fromWireType(Da[c>>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\nfunction Mb(a,b,c){switch(b){case 0:return c?function(d){return E[d>>>0]}:function(d){return A[d>>>0]};case 1:return c?function(d){return C[d>>>1]}:function(d){return B[d>>>1]};case 2:return c?function(d){return D[d>>>2]}:function(d){return F[d>>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function Nb(a){a||P(\"Cannot use deleted val. handle = \"+a);return Z[a].value}var Ob={};function Pb(a){var b=Ob[a];return void 0===b?K(a):b}var Qb=[];\nfunction Rb(a){var b=Qb.length;Qb.push(a);return b}function Sb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=Kb(D[(b>>2)+d>>>0],\"parameter \"+d);return c}var Tb={};function Ub(){if(!Vb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Tb)a[b]=Tb[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Vb=c}return Vb}var Vb;\nfunction Wb(){if(\"object\"===typeof crypto&&\"function\"===typeof crypto.getRandomValues){var a=new Uint8Array(1);return function(){crypto.getRandomValues(a);return a[0]}}try{var b=require(\"crypto\");return function(){return b.randomBytes(1)[0]}}catch(c){}return function(){x(\"randomDevice\")}}function Xb(a,b){Xb.Ba||(Xb.Ba=Wb());for(var c=0;c<b;c++)E[a+c>>0>>>0]=Xb.Ba();return 0}function Yb(a){return 0===a%4&&(0!==a%100||0===a%400)}function Zb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\nvar $b=[31,29,31,30,31,30,31,31,30,31,30,31],ac=[31,28,31,30,31,30,31,31,30,31,30,31];function bc(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Yb(a.getFullYear())?$b:ac)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction cc(a,b,c,d){function e(f,q,v){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<q;)f=v[0]+f;return f}function g(f,q){return e(f,q,\"0\")}function l(f,q){function v(G){return 0>G?-1:0<G?1:0}var y;0===(y=v(f.getFullYear()-q.getFullYear()))&&0===(y=v(f.getMonth()-q.getMonth()))&&(y=v(f.getDate()-q.getDate()));return y}function k(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function m(f){f=bc(new Date(f.ea+1900,0,1),f.wa);var q=new Date(f.getFullYear()+1,0,4),v=k(new Date(f.getFullYear(),0,4));q=k(q);return 0>=l(v,f)?0>=l(q,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var p=D[d+40>>2>>>0];d={Wa:D[d>>2>>>0],Va:D[d+4>>2>>>0],ua:D[d+8>>2>>>0],qa:D[d+12>>2>>>0],oa:D[d+16>>2>>>0],ea:D[d+20>>2>>>0],va:D[d+24>>2>>>0],wa:D[d+\n28>>2>>>0],$a:D[d+32>>2>>>0],Ua:D[d+36>>2>>>0],Xa:p?ra(p):\"\"};c=ra(c);p={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var n in p)c=c.replace(new RegExp(n,\"g\"),p[n]);var r=\n\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),t=\"January February March April May June July August September October November December\".split(\" \");p={\"%a\":function(f){return r[f.va].substring(0,3)},\"%A\":function(f){return r[f.va]},\"%b\":function(f){return t[f.oa].substring(0,3)},\"%B\":function(f){return t[f.oa]},\"%C\":function(f){return g((f.ea+1900)/100|0,2)},\"%d\":function(f){return g(f.qa,2)},\"%e\":function(f){return e(f.qa,2,\" \")},\"%g\":function(f){return m(f).toString().substring(2)},\n\"%G\":function(f){return m(f)},\"%H\":function(f){return g(f.ua,2)},\"%I\":function(f){f=f.ua;0==f?f=12:12<f&&(f-=12);return g(f,2)},\"%j\":function(f){return g(f.qa+Zb(Yb(f.ea+1900)?$b:ac,f.oa-1),3)},\"%m\":function(f){return g(f.oa+1,2)},\"%M\":function(f){return g(f.Va,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.ua&&12>f.ua?\"AM\":\"PM\"},\"%S\":function(f){return g(f.Wa,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.va||7},\"%U\":function(f){var q=new Date(f.ea+1900,0,1),v=0===q.getDay()?\nq:bc(q,7-q.getDay());f=new Date(f.ea+1900,f.oa,f.qa);return 0>l(v,f)?g(Math.ceil((31-v.getDate()+(Zb(Yb(f.getFullYear())?$b:ac,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(v,q)?\"01\":\"00\"},\"%V\":function(f){var q=new Date(f.ea+1901,0,4),v=k(new Date(f.ea+1900,0,4));q=k(q);var y=bc(new Date(f.ea+1900,0,1),f.wa);return 0>l(y,v)?\"53\":0>=l(q,y)?\"01\":g(Math.ceil((v.getFullYear()<f.ea+1900?f.wa+32-v.getDate():f.wa+1-v.getDate())/7),2)},\"%w\":function(f){return f.va},\"%W\":function(f){var q=new Date(f.ea,0,\n1),v=1===q.getDay()?q:bc(q,0===q.getDay()?1:7-q.getDay()+1);f=new Date(f.ea+1900,f.oa,f.qa);return 0>l(v,f)?g(Math.ceil((31-v.getDate()+(Zb(Yb(f.getFullYear())?$b:ac,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(v,q)?\"01\":\"00\"},\"%y\":function(f){return(f.ea+1900).toString().substring(2)},\"%Y\":function(f){return f.ea+1900},\"%z\":function(f){f=f.Ua;var q=0<=f;f=Math.abs(f)/60;return(q?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Xa},\"%%\":function(){return\"%\"}};for(n in p)0<=\nc.indexOf(n)&&(c=c.replace(new RegExp(n,\"g\"),p[n](d)));n=dc(c);if(n.length>b)return 0;E.set(n,a>>>0);return n.length-1}for(var ec=Array(256),fc=0;256>fc;++fc)ec[fc]=String.fromCharCode(fc);Va=ec;O=h.BindingError=Za(\"BindingError\");$a=h.InternalError=Za(\"InternalError\");S.prototype.isAliasOf=function(a){if(!(this instanceof S&&a instanceof S))return!1;var b=this.Z.ba.$,c=this.Z.aa,d=a.Z.ba.$;for(a=a.Z.aa;b.ha;)c=b.ra(c),b=b.ha;for(;d.ha;)a=d.ra(a),d=d.ha;return b===d&&c===a};\nS.prototype.clone=function(){this.Z.aa||bb(this);if(this.Z.pa)return this.Z.count.value+=1,this;var a=fb,b=Object,c=b.create,d=Object.getPrototypeOf(this),e=this.Z;a=a(c.call(b,d,{Z:{value:{count:e.count,na:e.na,pa:e.pa,aa:e.aa,ba:e.ba,fa:e.fa,ga:e.ga}}}));a.Z.count.value+=1;a.Z.na=!1;return a};S.prototype[\"delete\"]=function(){this.Z.aa||bb(this);this.Z.na&&!this.Z.pa&&P(\"Object already scheduled for deletion\");db(this);eb(this.Z);this.Z.pa||(this.Z.fa=void 0,this.Z.aa=void 0)};\nS.prototype.isDeleted=function(){return!this.Z.aa};S.prototype.deleteLater=function(){this.Z.aa||bb(this);this.Z.na&&!this.Z.pa&&P(\"Object already scheduled for deletion\");hb.push(this);1===hb.length&&gb&&gb(ib);this.Z.na=!0;return this};V.prototype.Ga=function(a){this.Ca&&(a=this.Ca(a));return a};V.prototype.Aa=function(a){this.la&&this.la(a)};V.prototype.argPackAdvance=8;V.prototype.readValueFromPointer=rb;V.prototype.deleteObject=function(a){if(null!==a)a[\"delete\"]()};\nV.prototype.fromWireType=function(a){function b(){return this.ta?vb(this.$.ja,{ba:this.Ka,aa:c,ga:this,fa:a}):vb(this.$.ja,{ba:this,aa:a})}var c=this.Ga(a);if(!c)return this.Aa(a),null;var d=ub(this.$,c);if(void 0!==d){if(0===d.Z.count.value)return d.Z.aa=c,d.Z.fa=a,d.clone();d=d.clone();this.Aa(a);return d}d=this.$.Fa(c);d=jb[d];if(!d)return b.call(this);d=this.sa?d.Da:d.pointerType;var e=sb(c,this.$,d.$);return null===e?b.call(this):this.ta?vb(d.$.ja,{ba:d,aa:e,ga:this,fa:a}):vb(d.$.ja,{ba:d,aa:e})};\nh.getInheritedInstanceCount=function(){return Object.keys(tb).length};h.getLiveInheritedInstances=function(){var a=[],b;for(b in tb)tb.hasOwnProperty(b)&&a.push(tb[b]);return a};h.flushPendingDeletes=ib;h.setDelayFunction=function(a){gb=a;hb.length&&gb&&gb(ib)};yb=h.UnboundTypeError=Za(\"UnboundTypeError\");h.count_emval_handles=function(){for(var a=0,b=5;b<Z.length;++b)void 0!==Z[b]&&++a;return a};h.get_first_emval=function(){for(var a=5;a<Z.length;++a)if(void 0!==Z[a])return Z[a];return null};\nfunction dc(a){var b=Array(ta(a)+1);sa(a,b,0,b.length);return b}function la(a){if(Ma(a)){a=a.slice(Na.length);try{var b=Buffer.from(a,\"base64\")}catch(c){b=new Buffer(a,\"base64\")}return new Uint8Array(b.buffer,b.byteOffset,b.byteLength)}}\nvar hc={a:function(a){return gc(a+16)+16},C:function(){},b:function(a,b,c){(new Sa(a)).Ia(b,c);Ta++;throw a;},J:function(a,b,c,d,e){var g=Ua(c);b=K(b);R(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,k){return k?d:e},argPackAdvance:8,readValueFromPointer:function(l){if(1===c)var k=E;else if(2===c)k=C;else if(4===c)k=D;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(k[l>>>g])},ia:null})},e:function(a,b,c,d,e,g,l,k,m,p,n,r,t){n=K(n);g=W(e,g);k&&\n(k=W(l,k));p&&(p=W(m,p));t=W(r,t);var f=Xa(n);lb(f,function(){Y(\"Cannot construct \"+n+\" due to unbound types\",[d])});Q([a,b,c],d?[d]:[],function(q){q=q[0];if(d){var v=q.$;var y=v.ja}else y=S.prototype;q=Ya(f,function(){if(Object.getPrototypeOf(this)!==G)throw new O(\"Use 'new' to construct \"+n);if(void 0===N.ka)throw new O(n+\" has no accessible constructor\");var Ib=N.ka[arguments.length];if(void 0===Ib)throw new O(\"Tried to invoke ctor of \"+n+\" with invalid number of parameters (\"+arguments.length+\n\") - expected (\"+Object.keys(N.ka).toString()+\") parameters instead!\");return Ib.apply(this,arguments)});var G=Object.create(y,{constructor:{value:q}});q.prototype=G;var N=new mb(n,q,G,t,v,g,k,p);v=new V(n,N,!0,!1);y=new V(n+\"*\",N,!1,!1);var ha=new V(n+\" const*\",N,!1,!0);jb[a]={pointerType:y,Da:ha};wb(f,q);return[v,y,ha]})},s:function(a,b,c,d,e,g,l){var k=Eb(c,d);b=K(b);g=W(e,g);Q([],[a],function(m){function p(){Y(\"Cannot call \"+n+\" due to unbound types\",k)}m=m[0];var n=m.name+\".\"+b,r=m.$.constructor;\nvoid 0===r[b]?(p.ma=c-1,r[b]=p):(kb(r,b,n),r[b].da[c-1]=p);Q([],k,function(t){t=[t[0],null].concat(t.slice(1));t=Db(n,t,null,g,l);void 0===r[b].da?(t.ma=c-1,r[b]=t):r[b].da[c-1]=t;return[]});return[]})},A:function(a,b,c,d,e,g,l,k){b=K(b);g=W(e,g);Q([],[a],function(m){m=m[0];var p=m.name+\".\"+b,n={get:function(){Y(\"Cannot access \"+p+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};k?n.set=function(){Y(\"Cannot access \"+p+\" due to unbound types\",[c])}:n.set=function(){P(p+\" is a read-only property\")};\nObject.defineProperty(m.$.constructor,b,n);Q([],[c],function(r){r=r[0];var t={get:function(){return r.fromWireType(g(d))},enumerable:!0};k&&(k=W(l,k),t.set=function(f){var q=[];k(d,r.toWireType(q,f));Cb(q)});Object.defineProperty(m.$.constructor,b,t);return[]});return[]})},f:function(a,b,c,d,e,g){0<b||x(\"Assertion failed: undefined\");var l=Eb(b,c);e=W(d,e);var k=[g],m=[];Q([],[a],function(p){p=p[0];var n=\"constructor \"+p.name;void 0===p.$.ka&&(p.$.ka=[]);if(void 0!==p.$.ka[b-1])throw new O(\"Cannot register multiple constructors with identical number of parameters (\"+\n(b-1)+\") for class '\"+p.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");p.$.ka[b-1]=function(){Y(\"Cannot construct \"+p.name+\" due to unbound types\",l)};Q([],l,function(r){p.$.ka[b-1]=function(){arguments.length!==b-1&&P(n+\" called with \"+arguments.length+\" arguments, expected \"+(b-1));m.length=0;k.length=b;for(var t=1;t<b;++t)k[t]=r[t].toWireType(m,arguments[t-1]);t=e.apply(null,k);Cb(m);return r[0].fromWireType(t)};return[]});return[]})},\nc:function(a,b,c,d,e,g,l,k){var m=Eb(c,d);b=K(b);g=W(e,g);Q([],[a],function(p){function n(){Y(\"Cannot call \"+r+\" due to unbound types\",m)}p=p[0];var r=p.name+\".\"+b;k&&p.$.La.push(b);var t=p.$.ja,f=t[b];void 0===f||void 0===f.da&&f.className!==p.name&&f.ma===c-2?(n.ma=c-2,n.className=p.name,t[b]=n):(kb(t,b,r),t[b].da[c-2]=n);Q([],m,function(q){q=Db(r,q,p,g,l);void 0===t[b].da?(q.ma=c-2,t[b]=q):t[b].da[c-2]=q;return[]});return[]})},u:function(a,b,c,d,e,g,l,k,m,p){b=K(b);e=W(d,e);Q([],[a],function(n){n=\nn[0];var r=n.name+\".\"+b,t={get:function(){Y(\"Cannot access \"+r+\" due to unbound types\",[c,l])},enumerable:!0,configurable:!0};m?t.set=function(){Y(\"Cannot access \"+r+\" due to unbound types\",[c,l])}:t.set=function(){P(r+\" is a read-only property\")};Object.defineProperty(n.$.ja,b,t);Q([],m?[c,l]:[c],function(f){var q=f[0],v={get:function(){var G=Fb(this,n,r+\" getter\");return q.fromWireType(e(g,G))},enumerable:!0};if(m){m=W(k,m);var y=f[1];v.set=function(G){var N=Fb(this,n,r+\" setter\"),ha=[];m(p,N,y.toWireType(ha,\nG));Cb(ha)}}Object.defineProperty(n.$.ja,b,v);return[]});return[]})},D:function(a,b){b=K(b);R(a,{name:b,fromWireType:function(c){var d=Z[c].value;Hb(c);return d},toWireType:function(c,d){return U(d)},argPackAdvance:8,readValueFromPointer:rb,ia:null})},w:function(a,b,c,d){function e(){}c=Ua(c);b=K(b);e.values={};R(a,{name:b,constructor:e,fromWireType:function(g){return this.constructor.values[g]},toWireType:function(g,l){return l.value},argPackAdvance:8,readValueFromPointer:Jb(b,c,d),ia:null});lb(b,\ne)},q:function(a,b,c){var d=Kb(a,\"enum\");b=K(b);a=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Ya(d.name+\"_\"+b,function(){})}});a.values[c]=d;a[b]=d},z:function(a,b,c){c=Ua(c);b=K(b);R(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,e){if(\"number\"!==typeof e&&\"boolean\"!==typeof e)throw new TypeError('Cannot convert \"'+T(e)+'\" to '+this.name);return e},argPackAdvance:8,readValueFromPointer:Lb(b,c),ia:null})},o:function(a,b,c,d,e,g){var l=\nEb(b,c);a=K(a);e=W(d,e);lb(a,function(){Y(\"Cannot call \"+a+\" due to unbound types\",l)},b-1);Q([],l,function(k){k=[k[0],null].concat(k.slice(1));wb(a,Db(a,k,null,e,g),b-1);return[]})},r:function(a,b,c,d,e){function g(p){return p}b=K(b);-1===e&&(e=4294967295);var l=Ua(c);if(0===d){var k=32-8*c;g=function(p){return p<<k>>>k}}var m=-1!=b.indexOf(\"unsigned\");R(a,{name:b,fromWireType:g,toWireType:function(p,n){if(\"number\"!==typeof n&&\"boolean\"!==typeof n)throw new TypeError('Cannot convert \"'+T(n)+'\" to '+\nthis.name);if(n<d||n>e)throw new TypeError('Passing a number \"'+T(n)+'\" from JS side to C/C++ side to an argument of type \"'+b+'\", which is outside the valid range ['+d+\", \"+e+\"]!\");return m?n>>>0:n|0},argPackAdvance:8,readValueFromPointer:Mb(b,l,0!==d),ia:null})},p:function(a,b,c){function d(g){g>>=2;var l=F;return new e(Ba,l[g+1>>>0],l[g>>>0])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=K(c);R(a,{name:c,fromWireType:d,argPackAdvance:8,\nreadValueFromPointer:d},{Ha:!0})},B:function(a,b){b=K(b);var c=\"std::string\"===b;R(a,{name:b,fromWireType:function(d){var e=F[d>>>2];if(c)for(var g=d+4,l=0;l<=e;++l){var k=d+4+l;if(l==e||0==A[k>>>0]){g=ra(g,k-g);if(void 0===m)var m=g;else m+=String.fromCharCode(0),m+=g;g=k+1}}else{m=Array(e);for(l=0;l<e;++l)m[l]=String.fromCharCode(A[d+4+l>>>0]);m=m.join(\"\")}X(d);return m},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var g=\"string\"===typeof e;g||e instanceof Uint8Array||\ne instanceof Uint8ClampedArray||e instanceof Int8Array||P(\"Cannot pass non-string to std::string\");var l=(c&&g?function(){return ta(e)}:function(){return e.length})(),k=gc(4+l+1);k>>>=0;F[k>>>2]=l;if(c&&g)sa(e,A,k+4,l+1);else if(g)for(g=0;g<l;++g){var m=e.charCodeAt(g);255<m&&(X(k),P(\"String has UTF-16 code units that do not fit in 8 bits\"));A[k+4+g>>>0]=m}else for(g=0;g<l;++g)A[k+4+g>>>0]=e[g];null!==d&&d.push(X,k);return k},argPackAdvance:8,readValueFromPointer:rb,ia:function(d){X(d)}})},x:function(a,\nb,c){c=K(c);if(2===b){var d=va;var e=wa;var g=xa;var l=function(){return B};var k=1}else 4===b&&(d=ya,e=za,g=Aa,l=function(){return F},k=2);R(a,{name:c,fromWireType:function(m){for(var p=F[m>>>2],n=l(),r,t=m+4,f=0;f<=p;++f){var q=m+4+f*b;if(f==p||0==n[q>>>k])t=d(t,q-t),void 0===r?r=t:(r+=String.fromCharCode(0),r+=t),t=q+b}X(m);return r},toWireType:function(m,p){\"string\"!==typeof p&&P(\"Cannot pass non-string to C++ string type \"+c);var n=g(p),r=gc(4+n+b);r>>>=0;F[r>>>2]=n>>k;e(p,r+4,n+b);null!==m&&\nm.push(X,r);return r},argPackAdvance:8,readValueFromPointer:rb,ia:function(m){X(m)}})},K:function(a,b){b=K(b);R(a,{Ja:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},i:function(a,b,c){a=Nb(a);b=Kb(b,\"emval::as\");var d=[],e=U(d);D[c>>>2]=e;return b.toWireType(d,a)},n:function(a,b,c,d){a=Qb[a];b=Nb(b);c=Pb(c);a(b,c,null,d)},d:Hb,m:function(a,b){b=Sb(a,b);for(var c=b[0],d=c.name+\"_$\"+b.slice(1).map(function(p){return p.name}).join(\"_\")+\"$\",e=[\"retType\"],g=[c],l=\"\",k=0;k<\na-1;++k)l+=(0!==k?\", \":\"\")+\"arg\"+k,e.push(\"argType\"+k),g.push(b[1+k]);d=\"return function \"+Xa(\"methodCaller_\"+d)+\"(handle, name, destructors, args) {\\n\";var m=0;for(k=0;k<a-1;++k)d+=\"    var arg\"+k+\" = argType\"+k+\".readValueFromPointer(args\"+(m?\"+\"+m:\"\")+\");\\n\",m+=b[k+1].argPackAdvance;d+=\"    var rv = handle[name](\"+l+\");\\n\";for(k=0;k<a-1;++k)b[k+1].deleteObject&&(d+=\"    argType\"+k+\".deleteObject(arg\"+k+\");\\n\");c.Ja||(d+=\"    return retType.toWireType(destructors, rv);\\n\");e.push(d+\"};\\n\");a=Bb(e).apply(null,\ng);return Rb(a)},j:function(a,b){a=Nb(a);b=Nb(b);return U(a[b])},k:function(a){4<a&&(Z[a].za+=1)},v:function(){return U([])},l:function(a){return U(Pb(a))},h:function(a){Cb(Z[a].value);Hb(a)},g:function(a,b){a=Kb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return U(a)},y:function(){x()},I:function(a,b,c){A.copyWithin(a>>>0,b>>>0,b+c>>>0)},t:function(a){var b=A.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&\n(d+=65536-d%65536);a:{try{oa.grow(Math.min(4294901760,d)-Ba.byteLength+65535>>>16);Ea();var e=1;break a}catch(g){}e=void 0}if(e)return!0}return!1},G:function(a,b){var c=0;Ub().forEach(function(d,e){var g=b+c;e=D[a+4*e>>2>>>0]=g;for(g=0;g<d.length;++g)E[e++>>0>>>0]=d.charCodeAt(g);E[e>>0>>>0]=0;c+=d.length+1});return 0},H:function(a,b){var c=Ub();D[a>>2>>>0]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});D[b>>2>>>0]=d;return 0},E:Xb,F:function(a,b,c,d){return cc(a,b,c,d)}};\n(function(){function a(e){h.asm=e.exports;oa=h.asm.L;Ea();H=h.asm.S;Ga.unshift(h.asm.M);I--;h.monitorRunDependencies&&h.monitorRunDependencies(I);0==I&&(null!==Ka&&(clearInterval(Ka),Ka=null),La&&(e=La,La=null,e()))}function b(e){a(e.instance)}function c(e){return Qa().then(function(g){return WebAssembly.instantiate(g,d)}).then(e,function(g){z(\"failed to asynchronously prepare wasm: \"+g);x(g)})}var d={a:hc};I++;h.monitorRunDependencies&&h.monitorRunDependencies(I);if(h.instantiateWasm)try{return h.instantiateWasm(d,\na)}catch(e){return z(\"Module.instantiateWasm callback failed with error: \"+e),!1}(function(){return na||\"function\"!==typeof WebAssembly.instantiateStreaming||Ma(J)||\"function\"!==typeof fetch?c(b):fetch(J,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(b,function(g){z(\"wasm streaming compile failed: \"+g);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nh.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.M).apply(null,arguments)};h._main=function(){return(h._main=h.asm.N).apply(null,arguments)};var Ab=h.___getTypeName=function(){return(Ab=h.___getTypeName=h.asm.O).apply(null,arguments)};h.___embind_register_native_and_builtin_types=function(){return(h.___embind_register_native_and_builtin_types=h.asm.P).apply(null,arguments)};\nvar gc=h._malloc=function(){return(gc=h._malloc=h.asm.Q).apply(null,arguments)},X=h._free=function(){return(X=h._free=h.asm.R).apply(null,arguments)};h.dynCall_vij=function(){return(h.dynCall_vij=h.asm.T).apply(null,arguments)};h.dynCall_iiiiiijj=function(){return(h.dynCall_iiiiiijj=h.asm.U).apply(null,arguments)};h.dynCall_iiiiij=function(){return(h.dynCall_iiiiij=h.asm.V).apply(null,arguments)};h.dynCall_iiiiijj=function(){return(h.dynCall_iiiiijj=h.asm.W).apply(null,arguments)};\nh.dynCall_viijii=function(){return(h.dynCall_viijii=h.asm.X).apply(null,arguments)};h.dynCall_viij=function(){return(h.dynCall_viij=h.asm.Y).apply(null,arguments)};var ic;function ma(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}La=function jc(){ic||kc();ic||(La=jc)};\nfunction kc(){function a(){if(!ic&&(ic=!0,h.calledRun=!0,!pa)){Ra(Ga);Ra(Ha);aa(h);if(h.onRuntimeInitialized)h.onRuntimeInitialized();if(lc){var b=h._main;try{var c=b(0,0);if(!noExitRuntime||0!==c){if(!noExitRuntime){if(h.onExit)h.onExit(c);pa=!0}da(c,new ma(c))}}catch(d){d instanceof ma||\"unwind\"==d||((b=d)&&\"object\"===typeof d&&d.stack&&(b=[d,d.stack]),z(\"exception thrown: \"+b),da(1,d))}finally{}}if(h.postRun)for(\"function\"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)b=h.postRun.shift(),\nIa.unshift(b);Ra(Ia)}}if(!(0<I)){if(h.preRun)for(\"function\"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)Ja();Ra(Fa);0<I||(h.setStatus?(h.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){h.setStatus(\"\")},1);a()},1)):a())}}h.run=kc;if(h.preInit)for(\"function\"==typeof h.preInit&&(h.preInit=[h.preInit]);0<h.preInit.length;)h.preInit.pop()();var lc=!0;h.noInitialRun&&(lc=!1);kc();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;","import { Library } from '../implementation/seal'\n\nexport type Loader = {\n  readonly library: Library\n}\n\n/**\n * Export a default function which instantiates the library\n * @param {Object} bin Emscripten library to initialize\n */\nexport const createLoader = async (\n  bin: () => Promise<Library>\n): Promise<Loader> => ({\n  library: await bin()\n})\n","export const INSTANCE_DELETED = 'Instance was deleted'\nexport const UNSUPPORTED_VECTOR_TYPE = 'Unsupported vector type'\nexport const UNSUPPORTED_BITSIZES_TYPE =\n  'Unsupported argument type! `bitSizes` must be an Int32Array'\nexport const UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE =\n  'Unsupported array type! `array` must be of type Int32Array, Uint32Array, BigInt64Array, or BigUint64Array.'\nexport const UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE =\n  'Unsupported array type! `array` must be of type Float64Array.'\nexport const INVALID_PLAIN_CONSRUCTOR_OPTIONS =\n  'Must specify a (coeffCount), (coeffCount, capacity)'\nexport const INVALID_CIPHER_CONSTRUCTOR_OPTIONS =\n  'Must specify a (context), (context, parmsId), or (context, parmsId, sizeCapacity)'\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { Context } from './context'\nimport { UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE } from './constants'\n\nexport type BatchEncoderDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly PlainText: PlainTextConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type BatchEncoderDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    PlainText,\n    Vector\n  }: BatchEncoderDependencyOptions): BatchEncoderConstructorOptions\n}\n\nexport type BatchEncoderConstructorOptions = {\n  (context: Context): BatchEncoder\n}\n\nexport type BatchEncoderTypes =\n  | Int32Array\n  | Uint32Array\n  | BigInt64Array\n  | BigUint64Array\n\nexport type BatchEncoder = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encode: (\n    array: BatchEncoderTypes,\n    plainText?: PlainText\n  ) => PlainText | void\n  readonly decode: (\n    plainText: PlainText,\n    signed?: boolean,\n    pool?: MemoryPoolHandle\n  ) => Int32Array | Uint32Array\n  readonly decodeBigInt: (\n    plainText: PlainText,\n    signed?: boolean,\n    pool?: MemoryPoolHandle\n  ) => BigInt64Array | BigUint64Array\n  readonly slotCount: number\n}\n\nconst BatchEncoderConstructor = (\n  library: Library\n): BatchEncoderDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  PlainText,\n  Vector\n}: BatchEncoderDependencyOptions): BatchEncoderConstructorOptions => (\n  context\n): BatchEncoder => {\n  const Constructor = library.BatchEncoder\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements BatchEncoder\n   */\n\n  /**\n   * @interface BatchEncoder\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name BatchEncoder#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name BatchEncoder#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name BatchEncoder#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Creates a PlainText from a given matrix. This function \"batches\" a given matrix\n     * of either signed or unsigned integers modulo the PlainText modulus into a PlainText element, and stores\n     * the result in the destination parameter. The input array must have size at most equal\n     * to the degree of the polynomial modulus. The first half of the elements represent the\n     * first row of the matrix, and the second half represent the second row. The numbers\n     * in the matrix can be at most equal to the PlainText modulus for it to represent\n     * a valid PlainText.\n     *\n     * If the destination PlainText overlaps the input values in memory, the behavior of\n     * this function is undefined.\n     *\n     * @function\n     * @name BatchEncoder#encode\n     * @param {Int32Array|Uint32Array|BigInt64Array|BigUint64Array} array Data to encode\n     * @param {PlainText} [plainText=null] Destination to store the encoded result\n     * @returns {PlainText|void} A new PlainText holding the encoded data or void if one was provided\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(Int32Array.from([1, -2, 3]))\n     */\n    encode(\n      array: Int32Array | Uint32Array | BigInt64Array | BigUint64Array,\n      plainText?: PlainText\n    ): PlainText | void {\n      try {\n        if (array.constructor === Int32Array) {\n          if (plainText) {\n            _instance.encode(array, plainText.instance, 'INT32')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, plain.instance, 'INT32')\n          return plain\n        }\n\n        if (array.constructor === Uint32Array) {\n          if (plainText) {\n            _instance.encode(array, plainText.instance, 'UINT32')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, plain.instance, 'UINT32')\n          return plain\n        }\n\n        if (array.constructor === BigInt64Array) {\n          // When embind supports BigInt64Arrays we can remove this hack\n          const stringArray = array.toString().split(',')\n          if (plainText) {\n            _instance.encode(stringArray, plainText.instance, 'INT64')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(stringArray, plain.instance, 'INT64')\n          return plain\n        }\n\n        if (array.constructor === BigUint64Array) {\n          // When embind supports BigInt64Arrays we can remove this hack\n          const stringArray = array.toString().split(',')\n          if (plainText) {\n            _instance.encode(stringArray, plainText.instance, 'UINT64')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(stringArray, plain.instance, 'UINT64')\n          return plain\n        }\n\n        throw new Error(UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Inverse of encode. This function \"unbatches\" a given PlainText into a matrix\n     * of signed or unsigned integers modulo the PlainText modulus, and stores the result in the destination\n     * parameter. The input PlainText must have degrees less than the polynomial modulus,\n     * and coefficients less than the PlainText modulus, i.e. it must be a valid PlainText\n     * for the encryption parameters. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name BatchEncoder#decode\n     * @param {PlainText} plainText Data to decode\n     * @param {boolean} [signed=true] By default, decode as an Int32Array. If false, decode as an Uint32Array\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}]\n     * @returns {Int32Array|Uint32Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(Int32Array.from([1, -2, 3]))\n     * const plainTextU = batchEncoder.encode(Uint32Array.from([1, 2, 3]))\n     *\n     * const result = batchEncoder.decode(plainText)\n     * const resultU = batchEncoder.decode(plainTextU, false) // To decode as an Uint32Array\n     */\n    decode(\n      plainText: PlainText,\n      signed = true,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Int32Array | Uint32Array {\n      try {\n        if (signed) {\n          const tempVect = Vector()\n          const instance = _instance.decodeInt32(plainText.instance, pool)\n          tempVect.unsafeInject(instance)\n          tempVect.setType('Int32Array')\n          const tempArr = tempVect.toArray() as Int32Array\n          tempVect.delete()\n          return tempArr\n        }\n        const tempVect = Vector()\n        const instance = _instance.decodeUint32(plainText.instance, pool)\n        tempVect.unsafeInject(instance)\n        tempVect.setType('Uint32Array')\n        const tempArr = tempVect.toArray() as Uint32Array\n        tempVect.delete()\n        return tempArr\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Performs the same function as the 32-bit decode, but supports true\n     * 64-bit values encapsulated by a BigInt.\n     *\n     * There's no official support for sending a BigInt64Array/BigUint64Array\n     * from C++ to JS, therefore this function uses string conversion to\n     * marshal data which is noticably slower. Use this function if you\n     * absolutely need to marshal values larger than 32 bits.\n     *\n     * @see {@link BatchEncoder#decode} for more information about decode.\n     * @function\n     * @name BatchEncoder#decodeBigInt\n     * @param {PlainText} plainText Data to decode\n     * @param {boolean} [signed=true] By default, decode as an BigInt64Array. If false, decode as an BigUint64Array\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}]\n     * @returns {BigInt64Array|BigUint64Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(BigInt64Array.from([1n, -2n, 3n]))\n     * const plainTextU = batchEncoder.encode(BigUint64Array.from([1n, 2n, 3n]))\n     *\n     * const result = batchEncoder.decodeBigInt(plainText)\n     * const resultU = batchEncoder.decodeBigInt(plainTextU, false) // To decode as an BigUint64Array\n     */\n    decodeBigInt(\n      plainText: PlainText,\n      signed = true,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): BigInt64Array | BigUint64Array {\n      try {\n        if (signed) {\n          const instance = _instance.decodeBigInt(\n            plainText.instance,\n            true,\n            pool\n          )\n          return BigInt64Array.from(instance)\n        }\n        const instance = _instance.decodeBigInt(plainText.instance, false, pool)\n        return BigUint64Array.from(instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The total number of batching slots available to hold data\n     *\n     * @readonly\n     * @name BatchEncoder#slotCount\n     * @type {number}\n     */\n    get slotCount() {\n      return _instance.slotCount()\n    }\n  }\n}\n\nexport const BatchEncoderInit = ({\n  loader\n}: LoaderOptions): BatchEncoderDependencies => {\n  const library: Library = loader.library\n  return BatchEncoderConstructor(library)\n}\n","import { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\nimport { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { VectorConstructorOptions } from './vector'\nimport { INVALID_CIPHER_CONSTRUCTOR_OPTIONS } from './constants'\nexport type CipherTextDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CipherTextDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    ParmsIdType,\n    MemoryPoolHandle,\n    Vector\n  }: CipherTextDependencyOptions): CipherTextConstructorOptions\n}\n\nexport type CipherTextConstructorOptions = {\n  ({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool\n  }?: {\n    context?: Context\n    parmsId?: ParmsIdType\n    sizeCapacity?: number\n    pool?: MemoryPoolHandle\n  }): CipherText\n}\n\nexport type CipherText = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly reserve: (context: Context, capacity: number) => void\n  readonly resize: (size: number) => void\n  readonly release: () => void\n  readonly coeffModulusSize: number\n  readonly polyModulusDegree: number\n  readonly size: number\n  readonly sizeCapacity: number\n  readonly isTransparent: boolean\n  readonly isNttForm: boolean\n  readonly parmsId: ParmsIdType\n  readonly scale: number\n  readonly setScale: (scale: number) => void\n  readonly pool: MemoryPoolHandle\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (cipher: CipherText) => void\n  readonly clone: () => CipherText\n  readonly move: (cipher: CipherText) => void\n}\n\nconst CipherTextConstructor = (library: Library): CipherTextDependencies => ({\n  Exception,\n  ComprModeType,\n  ParmsIdType,\n  MemoryPoolHandle,\n  Vector\n}: CipherTextDependencyOptions): CipherTextConstructorOptions => ({\n  context,\n  parmsId,\n  sizeCapacity,\n  pool = MemoryPoolHandle.global\n} = {}): CipherText => {\n  // Static methods\n  const Constructor = library.Ciphertext\n\n  let _instance = construct({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool\n  })\n\n  function construct({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool = MemoryPoolHandle.global\n  }: {\n    context?: Context\n    parmsId?: ParmsIdType\n    sizeCapacity?: number\n    pool?: MemoryPoolHandle\n  }) {\n    try {\n      if (!context && !parmsId && sizeCapacity === undefined) {\n        return new Constructor(pool)\n      } else if (context && !parmsId && sizeCapacity === undefined) {\n        return new Constructor(context.instance, pool)\n      } else if (context && parmsId && sizeCapacity === undefined) {\n        return new Constructor(context.instance, parmsId.instance, pool)\n      } else if (context && parmsId && sizeCapacity !== undefined) {\n        return new Constructor(\n          context.instance,\n          parmsId.instance,\n          sizeCapacity,\n          pool\n        )\n      } else {\n        throw new Error(INVALID_CIPHER_CONSTRUCTOR_OPTIONS)\n      }\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements CipherText\n   */\n\n  /**\n   * @interface CipherText\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name CipherText#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name CipherText#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name CipherText#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of a ciphertext\n     * with given capacity. In addition to the capacity, the allocation size is\n     * determined by the current encryption parameters.\n     *\n     * @function\n     * @name CipherText#reserve\n     * @param {Context} context The SEAL Context\n     * @param {number} capacity The capacity to reserve\n     */\n    reserve(context: Context, capacity: number) {\n      try {\n        return _instance.reserve(context.instance, capacity)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resizes the CipherText to given size, reallocating if the capacity\n     * of the CipherText is too small.\n     *\n     * This function is mainly intended for internal use and is called\n     * automatically by functions such as Evaluator.multiply and\n     * Evaluator.relinearize. A normal user should never have a reason\n     * to manually resize a CipherText.\n     *\n     * @function\n     * @name CipherText#resize\n     * @param {number} size The new size\n     */\n    resize(size: number) {\n      try {\n        return _instance.resize(size)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resets the CipherText. This function releases any memory allocated\n     * by the CipherText, returning it to the memory pool. It also sets all\n     * encryption parameter specific size information to zero.\n     *\n     * @function\n     * @name CipherText#release\n     */\n    release() {\n      _instance.release()\n    },\n\n    /**\n     * The number of primes in the coefficient modulus of the\n     * associated encryption parameters. This directly affects the\n     * allocation size of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#coeffModulusSize\n     * @type {number}\n     */\n    get coeffModulusSize() {\n      return _instance.coeffModulusSize()\n    },\n\n    /**\n     * The degree of the polynomial modulus of the associated\n     * encryption parameters. This directly affects the allocation size\n     * of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#polyModulusDegree\n     * @type {number}\n     */\n    get polyModulusDegree() {\n      return _instance.polyModulusDegree()\n    },\n\n    /**\n     * The size of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * The capacity of the allocation. This means the largest size\n     * of the CipherText that can be stored in the current allocation with\n     * the current encryption parameters.\n     *\n     * @readonly\n     * @name CipherText#sizeCapacity\n     * @type {number}\n     */\n    get sizeCapacity() {\n      return _instance.sizeCapacity()\n    },\n\n    /**\n     * Whether the current CipherText is transparent, i.e. does not require\n     * a secret key to decrypt. In typical security models such transparent\n     * CipherTexts would not be considered to be valid. Starting from the second\n     * polynomial in the current CipherText, this function returns true if all\n     * following coefficients are identically zero. Otherwise, returns false.\n     *\n     * @readonly\n     * @name CipherText#isTransparent\n     * @type {boolean}\n     */\n    get isTransparent() {\n      return _instance.isTransparent()\n    },\n\n    /**\n     * Whether the CipherText is in NTT form.\n     *\n     * @readonly\n     * @name CipherText#isNttForm\n     * @type {boolean}\n     */\n    get isNttForm() {\n      return _instance.isNttForm()\n    },\n\n    /**\n     * The reference to parmsId.\n     * @see {@link EncryptionParameters} for more information about parmsId.\n     *\n     * @readonly\n     * @name CipherText#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * The reference to the scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @readonly\n     * @name CipherText#scale\n     * @type {number}\n     */\n    get scale() {\n      return _instance.scale()\n    },\n\n    /**\n     * Sets the CipherText scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @function\n     * @name CipherText#setScale\n     * @param {number} scale The scale to set\n     */\n    setScale(scale: number) {\n      _instance.setScale(scale)\n    },\n\n    /**\n     * The currently used MemoryPoolHandle.\n     *\n     * @readonly\n     * @name CipherText#pool\n     * @type {MemoryPoolHandle}\n     */\n    get pool() {\n      return _instance.pool()\n    },\n\n    /**\n     * Save the CipherText to a base64 string\n     *\n     * @function\n     * @name CipherText#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the CipherText as a binary Uint8Array\n     *\n     * @function\n     * @name CipherText#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the CipherText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a CipherText from a base64 string\n     *\n     * @function\n     * @name CipherText#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a CipherText from an Uint8Array holding binary data\n     *\n     * @function\n     * @name CipherText#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing CipherText and overwrite this instance\n     *\n     * @function\n     * @name CipherText#copy\n     * @param {CipherText} cipher CipherText to copy\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = seal.CipherText()\n     * cipherTextB.copy(cipherTextA)\n     * // cipherTextB holds a copy of cipherTextA\n     */\n    copy(cipher: CipherText) {\n      try {\n        _instance.copy(cipher.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this CipherText\n     *\n     * @function\n     * @name CipherText#clone\n     * @returns {CipherText}\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = cipherTextA.clone()\n     * // cipherTextB holds a copy of cipherTextA\n     */\n    clone(): CipherText {\n      try {\n        const clonedInstance = _instance.clone()\n        const cipher = CipherTextConstructor(library)({\n          Exception,\n          ComprModeType,\n          ParmsIdType,\n          MemoryPoolHandle,\n          Vector\n        })()\n        cipher.unsafeInject(clonedInstance)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a CipherText into this one and delete the old reference\n     *\n     * @function\n     * @name CipherText#move\n     * @param {CipherText} cipher CipherText to move\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = seal.CipherText()\n     * cipherTextB.move(cipherTextA)\n     * // cipherTextB holds a the instance of cipherTextA.\n     * // cipherTextA no longer holds an instance\n     */\n    move(cipher: CipherText) {\n      try {\n        _instance.move(cipher.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        cipher.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const CipherTextInit = ({\n  loader\n}: LoaderOptions): CipherTextDependencies => {\n  const library: Library = loader.library\n  return CipherTextConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { Context } from './context'\nimport { UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE } from './constants'\n\nexport type CKKSEncoderDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly PlainText: PlainTextConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CKKSEncoderDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    PlainText,\n    Vector\n  }: CKKSEncoderDependencyOptions): CKKSEncoderConstructorOptions\n}\n\nexport type CKKSEncoderConstructorOptions = {\n  (context: Context): CKKSEncoder\n}\n\nexport type CKKSEncoderTypes = Float64Array\n\nexport type CKKSEncoder = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encode: (\n    array: CKKSEncoderTypes,\n    scale: number,\n    plainText?: PlainText,\n    pool?: MemoryPoolHandle\n  ) => PlainText | void\n  readonly decode: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => CKKSEncoderTypes\n  readonly slotCount: number\n}\n\nconst CKKSEncoderConstructor = (library: Library): CKKSEncoderDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  PlainText,\n  Vector\n}: CKKSEncoderDependencyOptions): CKKSEncoderConstructorOptions => (\n  context\n): CKKSEncoder => {\n  const Constructor = library.CKKSEncoder\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements CKKSEncoder\n   */\n\n  /**\n   * @interface CKKSEncoder\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name CKKSEncoder#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name CKKSEncoder#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name CKKSEncoder#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Encodes a vector of double-precision floating-point real numbers\n     * into a plaintext polynomial. Append zeros if vector size is less than N/2.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name CKKSEncoder#encode\n     * @param {Float64Array} array Data to encode\n     * @param {number} scale Scaling parameter defining encoding precision\n     * @param {PlainText} [plainText] Destination to store the encoded result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {PlainText|void} A new PlainText holding the encoded data or void if one was provided\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const ckksEncoder = seal.CKKSEncoder(context)\n     *\n     * const plainText = ckksEncoder.encode(Float64Array.from([1.11, -2.222, 3.333]), Math.pow(2, 20))\n     */\n    encode(\n      array: Float64Array,\n      scale: number,\n      plainText?: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): PlainText | void {\n      try {\n        if (array.constructor === Float64Array) {\n          if (plainText) {\n            _instance.encode(array, scale, plainText.instance, pool)\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, scale, plain.instance, pool)\n          return plain\n        } else {\n          throw new Error(UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE)\n        }\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Decodes a plaintext polynomial into double-precision floating-point\n     * real numbers. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name CKKSEncoder#decode\n     * @param {PlainText} plainText Data to decode\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Float64Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const ckksEncoder = seal.CKKSEncoder(context)\n     *\n     * const plainText = ckksEncoder.encode(Float64Array.from([1, 2, 3]))\n     *\n     * const result = ckksEncoder.decode(plainText)\n     */\n    decode(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Float64Array {\n      try {\n        const tempVect = Vector()\n        const instance = _instance.decodeDouble(plainText.instance, pool)\n        tempVect.unsafeInject(instance)\n        tempVect.setType('Float64Array')\n        const tempArr = tempVect.toArray() as Float64Array\n        tempVect.delete()\n        return tempArr\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The total number of CKKS slots available to hold data\n     *\n     * @readonly\n     * @name CKKSEncoder#slotCount\n     * @type {number}\n     */\n    get slotCount() {\n      return _instance.slotCount()\n    }\n  }\n}\n\nexport const CKKSEncoderInit = ({\n  loader\n}: LoaderOptions): CKKSEncoderDependencies => {\n  const library: Library = loader.library\n  return CKKSEncoderConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\nimport { Exception } from './exception'\nimport { SecurityLevel } from './security-level'\nimport { Vector, VectorConstructorOptions } from './vector'\nimport { UNSUPPORTED_BITSIZES_TYPE } from './constants'\n\nexport type CoeffModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly SecurityLevel: SecurityLevel\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CoeffModulusDependencies = {\n  ({\n    Exception,\n    SecurityLevel,\n    Vector\n  }: CoeffModulusDependencyOptions): CoeffModulusConstructorOptions\n}\n\nexport type CoeffModulusConstructorOptions = {\n  (): CoeffModulus\n}\n\nexport type CoeffModulus = {\n  readonly MaxBitCount: (\n    polyModulusDegree: number,\n    securityLevel?: SecurityLevel\n  ) => number\n  readonly BFVDefault: (\n    polyModulusDegree: number,\n    securityLevel?: SecurityLevel\n  ) => Vector\n  readonly Create: (polyModulusDegree: number, bitSizes: Int32Array) => Vector\n}\n\nconst CoeffModulusConstructor = (\n  library: Library\n): CoeffModulusDependencies => ({\n  Exception,\n  SecurityLevel,\n  Vector\n}: CoeffModulusDependencyOptions): CoeffModulusConstructorOptions => (): CoeffModulus => {\n  // Static methods\n  const _MaxBitCount = library.CoeffModulus.MaxBitCount\n  const _BFVDefault = library.CoeffModulus.BFVDefault\n  const _CreateFromArray = library.CoeffModulus.CreateFromArray\n\n  /**\n   * @implements CoeffModulus\n   */\n\n  /**\n   * @interface CoeffModulus\n   */\n  return {\n    /**\n     * Returns the Maximum Bit Count for the specified polyModulusDegree and securityLevel\n     *\n     * @function\n     * @name CoeffModulus.MaxBitCount\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {SecurityLevel} [securityLevel={@link SecurityLevel.tc128}] Security Level\n     * @returns {number} Maximum bit count\n     */\n    MaxBitCount(\n      polyModulusDegree: number,\n      securityLevel: SecurityLevel = SecurityLevel.tc128\n    ): number {\n      return _MaxBitCount(polyModulusDegree, securityLevel)\n    },\n\n    /**\n     * Returns a default vector of primes for the BFV CoeffModulus parameter\n     *\n     * @function\n     * @name CoeffModulus.BFVDefault\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {SecurityLevel} [securityLevel={@link SecurityLevel.tc128}] Security Level\n     * @returns {Vector} Vector containing Modulus primes\n     */\n    BFVDefault(\n      polyModulusDegree: number,\n      securityLevel: SecurityLevel = SecurityLevel.tc128\n    ): Vector {\n      try {\n        const vectorModulus = Vector()\n        const instance = _BFVDefault(polyModulusDegree, securityLevel)\n        vectorModulus.unsafeInject(instance)\n        vectorModulus.setType('Modulus')\n        return vectorModulus\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Creates a vector of primes for a given polyModulusDegree and bitSizes\n     *\n     * @function\n     * @name CoeffModulus.Create\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {Int32Array} bitSizes Int32Array containing values representing\n     * bit-sizes of primes\n     * @returns {Vector} Vector containing Modulus primes\n     */\n    Create(polyModulusDegree: number, bitSizes: Int32Array): Vector {\n      try {\n        if (bitSizes.constructor !== Int32Array) {\n          throw new Error(UNSUPPORTED_BITSIZES_TYPE)\n        }\n        const vectorModulus = Vector()\n        const instance = _CreateFromArray(polyModulusDegree, bitSizes)\n        vectorModulus.unsafeInject(instance)\n        vectorModulus.setType('Modulus')\n        return vectorModulus\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const CoeffModulusInit = ({\n  loader\n}: LoaderOptions): CoeffModulusDependencies => {\n  const library: Library = loader.library\n  return CoeffModulusConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type ComprModeTypeDependencies = {\n  (): ComprModeTypeConstructorOptions\n}\n\nexport type ComprModeTypeConstructorOptions = {\n  (): ComprModeType\n}\n\nexport type ComprModeType = {\n  readonly none: any\n  readonly zlib: any\n  readonly zstd: any\n}\n\nconst ComprModeTypeConstructor = (\n  library: Library\n): ComprModeTypeDependencies => (): ComprModeTypeConstructorOptions => (): ComprModeType => {\n  // Static methods\n  const _none = library.ComprModeType.none\n  const _zlib = library.ComprModeType.zlib\n  const _zstd = library.ComprModeType.zstd\n\n  /**\n   * @implements ComprModeType\n   */\n\n  /**\n   * @interface ComprModeType\n   */\n  return {\n    /**\n     * The `none` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.none\n     * @type {ComprModeType.none}\n     */\n    get none() {\n      /**\n       * @typedef {ComprModeType.none} ComprModeType.none\n       */\n      return _none\n    },\n\n    /**\n     * The `zlib` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.zlib\n     * @type {ComprModeType.zlib}\n     */\n    get zlib() {\n      /**\n       * @typedef {ComprModeType.zlib} ComprModeType.zlib\n       */\n      return _zlib\n    },\n\n    /**\n     * The `zstd` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.zstd\n     * @type {ComprModeType.zstd}\n     */\n    get zstd() {\n      /**\n       * @typedef {ComprModeType.zstd} ComprModeType.zstd\n       */\n      return _zstd\n    }\n  }\n}\n\nexport const ComprModeTypeInit = ({\n  loader\n}: LoaderOptions): ComprModeTypeDependencies => {\n  const library: Library = loader.library\n  return ComprModeTypeConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport {\n  EncryptionParameters,\n  EncryptionParametersConstructorOptions\n} from './encryption-parameters'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport {\n  EncryptionParameterQualifiers,\n  EncryptionParameterQualifiersConstructorOptions\n} from './encryption-parameter-qualifiers'\n\nexport type ContextDataDependencyOptions = {\n  readonly Exception: Exception\n  readonly EncryptionParameters: EncryptionParametersConstructorOptions\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersConstructorOptions\n}\n\nexport type ContextDataDependencies = {\n  ({\n    Exception,\n    EncryptionParameters,\n    ParmsIdType,\n    EncryptionParameterQualifiers\n  }: ContextDataDependencyOptions): ContextDataConstructorOptions\n}\n\nexport type ContextDataConstructorOptions = {\n  (): ContextData\n}\n\nexport type ContextData = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly parms: EncryptionParameters\n  readonly parmsId: ParmsIdType\n  readonly qualifiers: EncryptionParameterQualifiers\n  readonly totalCoeffModulusBitCount: number\n  readonly prevContextData: ContextData\n  readonly nextContextData: ContextData\n  readonly chainIndex: number\n}\n\nconst ContextDataConstructor = (library: Library): ContextDataDependencies => ({\n  Exception,\n  EncryptionParameters,\n  ParmsIdType,\n  EncryptionParameterQualifiers\n}: ContextDataDependencyOptions): ContextDataConstructorOptions => (): ContextData => {\n  let _instance: Instance\n  /**\n   * @implements ContextData\n   */\n\n  /**\n   * @interface ContextData\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name ContextData#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name ContextData#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name ContextData#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns a const reference to the underlying encryption parameters.\n     *\n     * @readonly\n     * @name ContextData#parms\n     * @type {EncryptionParameters}\n     */\n    get parms() {\n      const instance = _instance.parms()\n      const encryptionParameters = EncryptionParameters()\n      encryptionParameters.unsafeInject(instance)\n      return encryptionParameters\n    },\n\n    /**\n     * Returns the parmsId of the current parameters.\n     *\n     * @readonly\n     * @name ContextData#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * Returns a copy of EncryptionParameterQualifiers corresponding to the\n     * current encryption parameters. Note that to change the qualifiers it is\n     * necessary to create a new instance of SEALContext once appropriate changes\n     * to the encryption parameters have been made.\n     *\n     * @readonly\n     * @name ContextData#qualifiers\n     * @type {EncryptionParameterQualifiers}\n     */\n    get qualifiers() {\n      const encParmQualifiers = EncryptionParameterQualifiers()\n      encParmQualifiers.unsafeInject(_instance.qualifiers())\n      return encParmQualifiers\n    },\n\n    /**\n     * Returns the significant bit count of the total coefficient modulus.\n     *\n     * @readonly\n     * @name ContextData#totalCoeffModulusBitCount\n     * @type {number}\n     */\n    get totalCoeffModulusBitCount() {\n      return _instance.totalCoeffModulusBitCount()\n    },\n\n    /**\n     * Returns a shared_ptr to the context data corresponding to the previous parameters\n     * in the modulus switching chain. If the current data is the first one in the\n     * chain, then the result is nullptr.\n     *\n     * @readonly\n     * @name ContextData#prevContextData\n     * @type {ContextData}\n     */\n    get prevContextData() {\n      const cxtData = ContextDataConstructor(library)({\n        Exception,\n        EncryptionParameters,\n        ParmsIdType,\n        EncryptionParameterQualifiers\n      })()\n      cxtData.unsafeInject(_instance.prevContextData())\n      return cxtData\n    },\n\n    /**\n     * Returns a shared_ptr to the context data corresponding to the next parameters\n     * in the modulus switching chain. If the current data is the last one in the\n     * chain, then the result is nullptr.\n     *\n     * @readonly\n     * @name ContextData#nextContextData\n     * @type {ContextData}\n     */\n    get nextContextData() {\n      const cxtData = ContextDataConstructor(library)({\n        Exception,\n        EncryptionParameters,\n        ParmsIdType,\n        EncryptionParameterQualifiers\n      })()\n      cxtData.unsafeInject(_instance.nextContextData())\n      return cxtData\n    },\n\n    /**\n     * Returns the index of the parameter set in a chain. The initial parameters\n     * have index 0 and the index increases sequentially in the parameter chain.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#chainIndex\n     * @type {number}\n     */\n    get chainIndex() {\n      return _instance.chainIndex()\n    }\n  }\n}\n\nexport const ContextDataInit = ({\n  loader\n}: LoaderOptions): ContextDataDependencies => {\n  const library: Library = loader.library\n  return ContextDataConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { ContextData, ContextDataConstructorOptions } from './context-data'\nimport { EncryptionParameters } from './encryption-parameters'\nimport { SecurityLevel } from './security-level'\n\nexport type ContextDependencyOptions = {\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly ContextData: ContextDataConstructorOptions\n  readonly SecurityLevel: SecurityLevel\n}\n\nexport type ContextDependencies = {\n  ({\n    ParmsIdType,\n    ContextData,\n    SecurityLevel\n  }: ContextDependencyOptions): ContextConstructorOptions\n}\n\nexport type ContextConstructorOptions = {\n  (\n    encryptionParams: EncryptionParameters,\n    expandModChain?: boolean,\n    securityLevel?: SecurityLevel\n  ): Context\n}\n\nexport type Context = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly toHuman: () => string\n  readonly getContextData: (parmsId: ParmsIdType) => ContextData\n  readonly keyContextData: ContextData\n  readonly firstContextData: ContextData\n  readonly lastContextData: ContextData\n  readonly parametersSet: () => boolean\n  readonly keyParmsId: ParmsIdType\n  readonly firstParmsId: ParmsIdType\n  readonly lastParmsId: ParmsIdType\n  readonly usingKeyswitching: boolean\n}\n\nconst ContextConstructor = (library: Library): ContextDependencies => ({\n  ParmsIdType,\n  ContextData,\n  SecurityLevel\n}: ContextDependencyOptions): ContextConstructorOptions => (\n  encryptionParams,\n  expandModChain = true,\n  securityLevel = SecurityLevel.tc128\n): Context => {\n  // Static methods\n  const Constructor = library.SEALContext\n\n  let _instance = new Constructor(\n    encryptionParams.instance,\n    expandModChain,\n    securityLevel\n  ) as Instance\n\n  /**\n   * @implements Context\n   */\n\n  /**\n   * @interface Context\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Context#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Context#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Context#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the context parameters in a human readable string format.\n     *\n     * @private\n     * @function\n     * @name Context#toString\n     * @returns {string} Context details as a string\n     */\n    toHuman(): string {\n      return _instance.toHuman()\n    },\n\n    /**\n     * Returns the ContextData corresponding to encryption parameters with a given\n     * parmsId. If parameters with the given parmsId are not found then the\n     * function returns nullptr.\n     *\n     * @function\n     * @name Context#getContextData\n     * @param {ParmsIdType} parmsId Specific id to return ContextData for\n     * @returns {ContextData} ContextData corresponding to encryption parameters\n     */\n    getContextData(parmsId: ParmsIdType): ContextData {\n      const instance = _instance.getContextData(parmsId.instance)\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * The ContextData corresponding to encryption parameters that are used for keys.\n     *\n     * @readonly\n     * @name Context#keyContextData\n     * @type {ContextData}\n     */\n    get keyContextData() {\n      const instance = _instance.keyContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * The ContextData corresponding to the first encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#firstContextData\n     * @type {ContextData}\n     */\n    get firstContextData() {\n      const instance = _instance.firstContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * Returns the ContextData corresponding to the last encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#lastContextData\n     * @type {ContextData}\n     */\n    get lastContextData() {\n      const instance = _instance.lastContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * Whether the encryption parameters are set in a way that is considered valid by\n     * Microsoft SEAL, the variable parameters_set is set to true.\n     *\n     * @function\n     * @name Context#parametersSet\n     * @type {boolean}\n     */\n    parametersSet() {\n      return _instance.parametersSet()\n    },\n\n    /**\n     * Returns a ParmsIdType corresponding to the set of encryption parameters that are used for keys.\n     *\n     * @readonly\n     * @name Context#keyParmsId\n     * @type {ParmsIdType}\n     */\n    get keyParmsId() {\n      const instance = _instance.keyParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * Returns a ParmsIdType corresponding to the first encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#firstParmsId\n     * @type {ParmsIdType}\n     */\n    get firstParmsId() {\n      const instance = _instance.firstParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * The ParmsIdType corresponding to the last encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#lastParmsId\n     * @type {ParmsIdType}\n     */\n    get lastParmsId() {\n      const instance = _instance.lastParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * Whether the coefficient modulus supports keyswitching. In practice,\n     * support for keyswitching is required by Evaluator.relinearize,\n     * Evaluator.applyGalois, and all rotation and conjugation operations. For\n     * keyswitching to be available, the coefficient modulus parameter must consist\n     * of at least two prime number factors.\n     *\n     * @readonly\n     * @name Context#usingKeyswitching\n     * @type {boolean}\n     */\n    get usingKeyswitching() {\n      return _instance.usingKeyswitching()\n    }\n  }\n}\n\nexport const ContextInit = ({ loader }: LoaderOptions): ContextDependencies => {\n  const library: Library = loader.library\n  return ContextConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { CipherText } from './cipher-text'\nimport { Context } from './context'\nimport { SecretKey } from './secret-key'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\n\nexport type DecryptorDependencyOptions = {\n  readonly Exception: Exception\n  readonly PlainText: PlainTextConstructorOptions\n}\n\nexport type DecryptorDependencies = {\n  ({\n    Exception,\n    PlainText\n  }: DecryptorDependencyOptions): DecryptorConstructorOptions\n}\n\nexport type DecryptorConstructorOptions = {\n  (context: Context, secretKey: SecretKey): Decryptor\n}\n\nexport type Decryptor = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly decrypt: (\n    cipherText: CipherText,\n    plainText?: PlainText\n  ) => PlainText | void\n  readonly invariantNoiseBudget: (cipherText: CipherText) => number\n}\n\nconst DecryptorConstructor = (library: Library): DecryptorDependencies => ({\n  Exception,\n  PlainText\n}: DecryptorDependencyOptions): DecryptorConstructorOptions => (\n  context,\n  secretKey\n): Decryptor => {\n  const Constructor = library.Decryptor\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance, secretKey.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements Decryptor\n   */\n\n  /**\n   * @interface Decryptor\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Decryptor#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Decryptor#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Decryptor#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Decrypts a CipherText and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Decryptor#decrypt\n     * @param {CipherText} cipherText CipherText to decrypt\n     * @param {PlainText} [plainText] PlainText destination to store the decrypted result\n     * @returns {PlainText|void} Returns undefined if a PlainText was specified. Otherwise returns a\n     * PlainText containng the decrypted result\n     */\n    decrypt(cipherText: CipherText, plainText?: PlainText): PlainText | void {\n      try {\n        if (plainText) {\n          _instance.decrypt(cipherText.instance, plainText.instance)\n          return\n        }\n        const plain = PlainText()\n        _instance.decrypt(cipherText.instance, plain.instance)\n        return plain\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Computes the invariant noise budget (in bits) of a CipherText. The invariant\n     * noise budget measures the amount of room there is for the noise to grow while\n     * ensuring correct decryptions. This function works only with the BFV scheme.\n     *\n     * @par Invariant Noise Budget\n     * The invariant noise polynomial of a CipherText is a rational coefficient\n     * polynomial, such that a CipherText decrypts correctly as long as the\n     * coefficients of the invariantnoise polynomial are of absolute value less\n     * than 1/2. Thus, we call the infinity-norm of the invariant noise polynomial\n     * the invariant noise, and for correct decryption requireit to be less than\n     * 1/2. If v denotes the invariant noise, we define the invariant noise budget\n     * as -log2(2v). Thus, the invariant noise budget starts from some initial\n     * value, which depends on the encryption parameters, and decreases when\n     * computations are performed. When the budget reaches zero, the CipherText\n     * becomes too noisy to decrypt correctly.\n     *\n     * @function\n     * @name Decryptor#invariantNoiseBudget\n     * @param {CipherText} cipherText CipherText to measure\n     * @returns {number} Invariant noise budget (in bits)\n     */\n    invariantNoiseBudget(cipherText: CipherText): number {\n      try {\n        return _instance.invariantNoiseBudget(cipherText.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const DecryptorInit = ({\n  loader\n}: LoaderOptions): DecryptorDependencies => {\n  const library: Library = loader.library\n  return DecryptorConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Vector, VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { SchemeType } from './scheme-type'\nimport { Exception } from './exception'\nimport { Modulus, ModulusConstructorOptions } from './modulus'\n\nexport type EncryptionParametersDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Modulus: ModulusConstructorOptions\n  readonly SchemeType: SchemeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type EncryptionParametersDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Modulus,\n    SchemeType,\n    Vector\n  }: EncryptionParametersDependencyOptions): EncryptionParametersConstructorOptions\n}\n\nexport type EncryptionParametersConstructorOptions = {\n  (schemeType?: SchemeType): EncryptionParameters\n}\n\nexport type EncryptionParameters = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly setPolyModulusDegree: (polyModulusDegree: number) => void\n  readonly setCoeffModulus: (coeffModulus: Vector) => void\n  readonly setPlainModulus: (plainModulus: Modulus) => void\n  readonly scheme: SchemeType\n  readonly polyModulusDegree: number\n  readonly coeffModulus: BigUint64Array\n  readonly plainModulus: Modulus\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (encoded: string) => void\n  readonly loadArray: (array: Uint8Array) => void\n}\n\nconst EncryptionParametersConstructor = (\n  library: Library\n): EncryptionParametersDependencies => ({\n  Exception,\n  ComprModeType,\n  Modulus,\n  SchemeType,\n  Vector\n}: EncryptionParametersDependencyOptions): EncryptionParametersConstructorOptions => (\n  schemeType: SchemeType = SchemeType.none\n): EncryptionParameters => {\n  const Constructor = library.EncryptionParameters\n  let _instance = new Constructor(schemeType)\n\n  /**\n   * @implements EncryptionParameters\n   */\n\n  /**\n   * @interface EncryptionParameters\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name EncryptionParameters#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name EncryptionParameters#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name EncryptionParameters#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Sets the degree of the polynomial modulus parameter to the specified value.\n     * The polynomial modulus directly affects the number of coefficients in\n     * PlainText polynomials, the size of CipherText elements, the computational\n     * performance of the scheme (bigger is worse), and the security level (bigger\n     * is better). In Microsoft SEAL the degree of the polynomial modulus must be a power\n     * of 2 (e.g.  1024, 2048, 4096, 8192, 16384, or 32768).\n     *\n     * @function\n     * @name EncryptionParameters#setPolyModulusDegree\n     * @param {number} polyModulusDegree The degree of the polynomial modulus\n     */\n    setPolyModulusDegree(polyModulusDegree: number) {\n      try {\n        _instance.setPolyModulusDegree(polyModulusDegree)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the coefficient modulus parameter. The coefficient modulus consists\n     * of a list of distinct prime numbers, and is represented by a vector of\n     * Modulus objects. The coefficient modulus directly affects the size\n     * of CipherText elements, the amount of computation that the scheme can perform\n     * (bigger is better), and the security level (bigger is worse). In Microsoft SEAL each\n     * of the prime numbers in the coefficient modulus must be at most 60 bits,\n     * and must be congruent to 1 modulo 2*degree(poly_modulus).\n     *\n     * @function\n     * @name EncryptionParameters#setCoeffModulus\n     * @param {Vector} coeffModulus Vector of Modulus primes\n     */\n    setCoeffModulus(coeffModulus: Vector) {\n      try {\n        _instance.setCoeffModulus(coeffModulus.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the PlainText modulus parameter. The PlainText modulus is an integer\n     * modulus represented by the Modulus class. The PlainText modulus\n     * determines the largest coefficient that PlainText polynomials can represent.\n     * It also affects the amount of computation that the scheme can perform\n     * (bigger is worse). In Microsoft SEAL the PlainText modulus can be at most 60 bits\n     * long, but can otherwise be any integer. Note, however, that some features\n     * (e.g. batching) require the PlainText modulus to be of a particular form.\n     *\n     * @function\n     * @name EncryptionParameters#setPlainModulus\n     * @param {Modulus} plainModulus PlainText modulus parameter\n     */\n    setPlainModulus(plainModulus: Modulus) {\n      try {\n        _instance.setPlainModulus(plainModulus.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The encryption scheme type.\n     *\n     * @readonly\n     * @name EncryptionParameters#scheme\n     * @type {SchemeType.none|SchemeType.bfv|SchemeType.ckks}\n     */\n    get scheme() {\n      return _instance.scheme()\n    },\n\n    /**\n     * The degree of the polynomial modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#polyModulusDegree\n     * @type {number}\n     */\n    get polyModulusDegree() {\n      return _instance.polyModulusDegree()\n    },\n\n    /**\n     * Returns the currently set coefficient modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#coeffModulus\n     * @type {BigUint64Array}\n     */\n    get coeffModulus() {\n      const tempVect = Vector()\n      const instance = _instance.coeffModulus()\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Modulus')\n      const tempArr = tempVect.toArray() as BigUint64Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Returns the currently set PlainText modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#plainModulus\n     * @type {Modulus}\n     */\n    get plainModulus() {\n      const instance = _instance.plainModulus()\n      const smallModulus = Modulus(BigInt(0))\n      smallModulus.inject(instance)\n      return smallModulus\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name EncryptionParameters#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the Encryption Parameters as a binary Uint8Array\n     *\n     * @function\n     * @name EncryptionParameters#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the CipherText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load the Encryption Parameters from a base64 string\n     *\n     * @function\n     * @name EncryptionParameters#load\n     * @param {string} encoded base64 encoded string\n     */\n    load(encoded: string) {\n      try {\n        _instance.loadFromString(encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load the Encryption Parameters from an Uint8Array holding binary data\n     *\n     * @function\n     * @name EncryptionParameters#loadArray\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(array: Uint8Array) {\n      try {\n        _instance.loadFromArray(array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EncryptionParametersInit = ({\n  loader\n}: LoaderOptions): EncryptionParametersDependencies => {\n  const library: Library = loader.library\n  return EncryptionParametersConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { CipherText, CipherTextConstructorOptions } from './cipher-text'\nimport { Context } from './context'\nimport { Serializable, SerializableConstructorOptions } from './serializable'\nimport { PublicKey } from './public-key'\nimport { SecretKey } from './secret-key'\nimport { PlainText } from './plain-text'\n\nexport type EncryptorDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly CipherText: CipherTextConstructorOptions\n  readonly Serializable: SerializableConstructorOptions\n}\n\nexport type EncryptorDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    CipherText,\n    Serializable\n  }: EncryptorDependencyOptions): EncryptorConstructorOptions\n}\n\nexport type EncryptorConstructorOptions = {\n  (context: Context, publicKey: PublicKey, secretKey?: SecretKey): Encryptor\n}\n\nexport type Encryptor = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encrypt: (\n    plainText: PlainText,\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptSerializable: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => Serializable\n  readonly encryptSymmetric: (\n    plainText: PlainText,\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptSymmetricSerializable: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => Serializable\n  readonly encryptZero: (\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptZeroSerializable: (pool?: MemoryPoolHandle) => Serializable\n}\n\nconst EncryptorConstructor = (library: Library): EncryptorDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  CipherText,\n  Serializable\n}: EncryptorDependencyOptions): EncryptorConstructorOptions => (\n  context,\n  publicKey,\n  secretKey\n): Encryptor => {\n  const Constructor = library.Encryptor\n  let _instance = constructInstance(context, publicKey, secretKey)\n\n  function constructInstance(\n    context: Context,\n    publicKey: PublicKey,\n    secretKey?: SecretKey\n  ) {\n    try {\n      if (secretKey) {\n        return new Constructor(\n          context.instance,\n          publicKey.instance,\n          secretKey.instance\n        )\n      }\n      return new Constructor(context.instance, publicKey.instance)\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements Encryptor\n   */\n\n  /**\n   * @interface Encryptor\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Encryptor#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Encryptor#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Encryptor#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Encrypts a PlainText and stores the result in the destination parameter.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encrypt\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {CipherText} [cipherText] CipherText destination to store the encrypted result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encrypt(\n      plainText: PlainText,\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encrypt(plainText.instance, cipherText.instance, pool)\n          return\n        }\n        const cipher = CipherText()\n        _instance.encrypt(plainText.instance, cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a PlainText and returns a CipherText as a Serializable object.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptSerializable\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} A Serializable containing the encrypted result\n     */\n    encryptSerializable(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const temp = Serializable()\n        const instance = _instance.encryptSerializable(plainText.instance, pool)\n        temp.unsafeInject(instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a PlainText with the secret key and stores the result in\n     * destination.\n     *\n     * The encryption parameters for the resulting CipherText\n     * correspond to:\n     * 1) in BFV, the highest (data) level in the modulus switching chain,\n     * 2) in CKKS, the encryption parameters of the plaintext.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptSymmetric\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {CipherText} [cipherText] CipherText destination to store the encrypted result.\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encryptSymmetric(\n      plainText: PlainText,\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encryptSymmetric(\n            plainText.instance,\n            cipherText.instance,\n            pool\n          )\n          return\n        }\n        const cipher = CipherText()\n        _instance.encryptSymmetric(plainText.instance, cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a plaintext with the secret key and returns the ciphertext as\n     * a serializable object.\n     *\n     * The encryption parameters for the resulting CipherText\n     * correspond to:\n     * 1) in BFV, the highest (data) level in the modulus switching chain,\n     * 2) in CKKS, the encryption parameters of the plaintext.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * Half of the ciphertext data is pseudo-randomly generated from a seed to\n     * reduce the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     * @function\n     * @name Encryptor#encryptSymmetricSerializable\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} Returns a Serializable containing the encrypted result\n     */\n    encryptSymmetricSerializable(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.encryptSymmetricSerializable(\n          plainText.instance,\n          pool\n        )\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     *\n     * Encrypts a zero plaintext with the public key and returns the ciphertext\n     * as a serializable object.\n     *\n     * The encryption parameters for the resulting ciphertext correspond to the\n     * highest (data) level in the modulus switching chain. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptZero\n     * @param {CipherText} [cipherText] A CipherText to overwrite.\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encryptZero(\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encryptZero(cipherText.instance, pool)\n          return\n        }\n        const cipher = CipherText()\n        _instance.encryptZero(cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     *\n     * Encrypts a zero plaintext with the public key and stores the result in\n     * destination.\n     *\n     * The encryption parameters for the resulting ciphertext correspond to the\n     * highest (data) level in the modulus switching chain. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptZeroSerializable\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} A CipherText as a serialized object containing the encrypted result\n     */\n    encryptZeroSerializable(\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.encryptZeroSerializable(pool)\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EncryptorInit = ({\n  loader\n}: LoaderOptions): EncryptorDependencies => {\n  const library: Library = loader.library\n  return EncryptorConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { CipherText, CipherTextConstructorOptions } from './cipher-text'\nimport { Context } from './context'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { RelinKeys } from './relin-keys'\nimport { ParmsIdType } from './parms-id-type'\nimport { GaloisKeys } from './galois-keys'\nimport { SchemeType } from './scheme-type'\n\nexport type EvaluatorDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly CipherText: CipherTextConstructorOptions\n  readonly PlainText: PlainTextConstructorOptions\n}\n\nexport type EvaluatorDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    CipherText,\n    PlainText\n  }: EvaluatorDependencyOptions): EvaluatorConstructorOptions\n}\n\nexport type EvaluatorConstructorOptions = {\n  (context: Context): Evaluator\n}\n\nexport type Evaluator = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly negate: (\n    encrypted: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly add: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly sub: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly multiply: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly square: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly relinearize: (\n    encrypted: CipherText,\n    relinKeys: RelinKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly cipherModSwitchToNext: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly cipherModSwitchTo: (\n    encrypted: CipherText,\n    parmsId: ParmsIdType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly plainModSwitchToNext: (\n    plain: PlainText,\n    destination?: PlainText\n  ) => PlainText | void\n  readonly plainModSwitchTo: (\n    plain: PlainText,\n    parmsId: ParmsIdType,\n    destination?: PlainText\n  ) => PlainText | void\n  readonly rescaleToNext: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rescaleTo: (\n    encrypted: CipherText,\n    parmsId: ParmsIdType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly exponentiate: (\n    encrypted: CipherText,\n    exponent: number,\n    relinKeys: RelinKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly addPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly subPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly multiplyPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly plainTransformToNtt: (\n    plain: PlainText,\n    parmsId: ParmsIdType,\n    destinationNtt?: PlainText,\n    pool?: MemoryPoolHandle\n  ) => PlainText | void\n  readonly cipherTransformToNtt: (\n    encrypted: CipherText,\n    destinationNtt?: CipherText\n  ) => CipherText | void\n  readonly cipherTransformFromNtt: (\n    encryptedNtt: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly applyGalois: (\n    encrypted: CipherText,\n    galoisElt: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateRows: (\n    encrypted: CipherText,\n    steps: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateColumns: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateVector: (\n    encrypted: CipherText,\n    steps: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly complexConjugate: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly sumElements: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly dotProduct: (\n    a: CipherText,\n    b: CipherText,\n    relinKeys: RelinKeys,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly dotProductPlain: (\n    a: CipherText,\n    b: PlainText,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n}\n\nconst EvaluatorConstructor = (library: Library): EvaluatorDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  CipherText,\n  PlainText\n}: EvaluatorDependencyOptions): EvaluatorConstructorOptions => (\n  context\n): Evaluator => {\n  const Constructor = library.Evaluator\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements Evaluator\n   */\n\n  /**\n   * @interface Evaluator\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Evaluator#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Evaluator#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Evaluator#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Negates a CipherText and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#negate\n     * @param {CipherText} encrypted CipherText to negate\n     * @param {CipherText} [destination] CipherText to store the negated results\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherText = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.negate(cipherText)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.negate(encrypted, cipherDest)\n     */\n    negate(encrypted: CipherText, destination?: CipherText): CipherText | void {\n      try {\n        if (destination) {\n          _instance.negate(encrypted.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.negate(encrypted.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Adds two CipherTexts. This function adds together a and b\n     * and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#add\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the sum\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.add(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.add(cipherTextA, cipherTextB, cipherDest)\n     */\n    add(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.add(a.instance, b.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.add(a.instance, b.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Subtracts two CipherTexts. This function computes the difference of a\n     * and b and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#sub\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the difference\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.sub(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.sub(cipherTextA, cipherTextB, cipherDest)\n     */\n    sub(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.sub(a.instance, b.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.sub(a.instance, b.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Multiplies two CipherTexts. This functions computes the product of a\n     * and b and stores the result in the destination parameter. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#multiply\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the product\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.multiply(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.multiply(cipherTextA, cipherTextB, cipherDest)\n     */\n    multiply(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiply(a.instance, b.instance, destination.instance, pool)\n          return\n        }\n        const temp = CipherText()\n        _instance.multiply(a.instance, b.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Squares a CipherText. This functions computes the square of encrypted and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#square\n     * @param {CipherText} encrypted CipherText to square\n     * @param {CipherText} [destination] CipherText destination to store the squared result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.square(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.square(cipherTextA, cipherDest)\n     */\n    square(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.square(encrypted.instance, destination.instance, pool)\n          return\n        }\n        const temp = CipherText()\n        _instance.square(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Relinearizes a CipherText. This functions relinearizes encrypted, reducing\n     * its size down to 2, and stores the result in the destination parameter.\n     * If the size of encrypted is K+1, the given relinearization keys need to\n     * have size at least K-1. Dynamic memory allocations in the process are allocated\n     * from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#relinearize\n     * @param {CipherText} encrypted CipherText to relinearize\n     * @param {RelinKeys} relinKeys RelinKey used to perform relinearization\n     * @param {CipherText} [destination] CipherText destination to store the relinearized result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.relinearize(cipherTextA, relinKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.relinearize(cipherTextA, relinKeys, cipherDest)\n     */\n    relinearize(\n      encrypted: CipherText,\n      relinKeys: RelinKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.relinearize(\n            encrypted.instance,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.relinearize(\n          encrypted.instance,\n          relinKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down to q_1...q_{k-1} and stores the result in the destination\n     * parameter. Dynamic memory allocations in the process are allocated from\n     * the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#cipherModSwitchToNext\n     * @param {CipherText} encrypted CipherText to switch its modulus down\n     * @param {CipherText} [destination] CipherText destination to store the switched result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.cipherModSwitchToNext(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherModSwitchToNext(cipherTextA, cipherDest)\n     */\n    cipherModSwitchToNext(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherModSwitchToNext(\n            encrypted.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherModSwitchToNext(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down until the parameters reach the given parmsId and stores the\n     * result in the destination parameter. Dynamic memory allocations in the process\n     * are allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#cipherModSwitchTo\n     * @param {CipherText} encrypted CipherText to switch its modulus down\n     * @param {ParmsIdType} parmsId Target parmsId to switch to\n     * @param {CipherText} [destination] CipherText destination to store the switched result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.cipherModSwitchTo(cipherTextA, parmsId)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherModSwitchTo(cipherTextA, parmsId, cipherDest)\n     */\n    cipherModSwitchTo(\n      encrypted: CipherText,\n      parmsId: ParmsIdType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherModSwitchTo(\n            encrypted.instance,\n            parmsId.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherModSwitchTo(\n          encrypted.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Modulus switches an NTT transformed PlainText from modulo q_1...q_k down\n     * to modulo q_1...q_{k-1} and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#plainModSwitchToNext\n     * @param {PlainText} plain PlainText to switch its modulus down\n     * @param {PlainText} [destination] PlainText destination to store the switched result\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const resultCipher = evaluator.plainModSwitchToNext(plainTextA)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainModSwitchToNext(plainTextA, plainDest)\n     */\n    plainModSwitchToNext(\n      plain: PlainText,\n      destination?: PlainText\n    ): PlainText | void {\n      try {\n        if (destination) {\n          _instance.plainModSwitchToNext(plain.instance, destination.instance)\n          return\n        }\n        const temp = PlainText()\n        _instance.plainModSwitchToNext(plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given an NTT transformed PlainText modulo q_1...q_k, this function switches\n     * the modulus down until the parameters reach the given parmsId and stores\n     * the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#plainModSwitchTo\n     * @param {PlainText} plain PlainText to switch its modulus down\n     * @param {ParmsIdType} parmsId Target parmsId to switch to\n     * @param {PlainText} [destination] PlainText destination to store the switched result\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.plainModSwitchTo(plainTextA, parmsId)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainModSwitchTo(plainTextA, parmsId, plainDest)\n     */\n    plainModSwitchTo(\n      plain: PlainText,\n      parmsId: ParmsIdType,\n      destination?: PlainText\n    ): PlainText | void {\n      try {\n        if (destination) {\n          _instance.plainModSwitchTo(\n            plain.instance,\n            parmsId.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = PlainText()\n        _instance.plainModSwitchTo(\n          plain.instance,\n          parmsId.instance,\n          temp.instance\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down to q_1...q_{k-1}, scales the message down accordingly, and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rescaleToNext\n     * @param {CipherText} encrypted CipherText to rescale\n     * @param {CipherText} [destination] CipherText destination to store the rescaled result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rescaleToNext(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rescaleToNext(cipherTextA, cipherDest)\n     */\n    rescaleToNext(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rescaleToNext(\n            encrypted.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rescaleToNext(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down until the parameters reach the given parmsId, scales the message\n     * down accordingly, and stores the result in the destination parameter. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rescaleTo\n     * @param {CipherText} encrypted CipherText to rescale\n     * @param {ParmsIdType} parmsId Target parmsId to rescale to\n     * @param {CipherText} [destination] CipherText destination to store the rescaled result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.rescaleTo(cipherTextA, parmsId)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rescaleTo(cipherTextA, parmsId, cipherDest)\n     */\n    rescaleTo(\n      encrypted: CipherText,\n      parmsId: ParmsIdType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rescaleTo(\n            encrypted.instance,\n            parmsId.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rescaleTo(\n          encrypted.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Exponentiates a CipherText. This functions raises encrypted to a power and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle. The exponentiation is done in a depth-optimal order, and\n     * relinearization is performed automatically after every multiplication in\n     * the process. In relinearization the given relinearization keys are used.\n     *\n     * @function\n     * @name Evaluator#exponentiate\n     * @param {CipherText} encrypted CipherText to exponentiate\n     * @param {number} exponent Positive integer to exponentiate the CipherText\n     * @param {RelinKeys} relinKeys RelinKeys used to perform relinearization after each exponentiation\n     * @param {CipherText} [destination] CipherText destination to store the exponentiated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.exponentiate(cipherTextA, 3, relinKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.exponentiate(cipherTextA, 3, relinKeys, cipherDest)\n     */\n    exponentiate(\n      encrypted: CipherText,\n      exponent: number,\n      relinKeys: RelinKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.exponentiate(\n            encrypted.instance,\n            exponent,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.exponentiate(\n          encrypted.instance,\n          exponent,\n          relinKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Adds a CipherText and a PlainText. This function adds a CipherText and\n     * a PlainText and stores the result in the destination parameter. The PlainText\n     * must be valid for the current encryption parameters.\n     *\n     * @function\n     * @name Evaluator#addPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the sum\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.addPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.addPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    addPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.addPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.addPlain(encrypted.instance, plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Subtracts a PlainText from a CipherText. This function subtracts a PlainText\n     * from a CipherText and stores the result in the destination parameter. The\n     * PlainText must be valid for the current encryption parameters.\n     *\n     * @function\n     * @name Evaluator#subPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the difference\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.subPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.subPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    subPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.subPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.subPlain(encrypted.instance, plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Multiplies a CipherText with a PlainText. This function multiplies\n     * a CipherText with a PlainText and stores the result in the destination\n     * parameter. The PlainText must be a valid for the current encryption parameters,\n     * and cannot be identially 0. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#multiplyPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the product\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText?} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.multiplyPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.multiplyPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    multiplyPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiplyPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.multiplyPlain(\n          encrypted.instance,\n          plain.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a PlainText to NTT domain. This functions applies the number\n     * Theoretic Transform to a PlainText by first embedding integers modulo the\n     * PlainText modulus to integers modulo the coefficient modulus and then\n     * performing David Harvey's NTT on the resulting polynomial. The transformation\n     * is done with respect to encryption parameters corresponding to a given\n     * parmsId. The result is stored in the destinationNtt parameter. For the\n     * operation to be valid, the PlainText must have degree less than PolyModulusDegree\n     * and each coefficient must be less than the PlainText modulus, i.e., the PlainText\n     * must be a valid PlainText under the current encryption parameters. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#plainTransformToNtt\n     * @param {PlainText} plain PlainText to transform\n     * @param {ParmsIdType} parmsId target parmsId to perform NTT transformation\n     * @param {PlainText} [destinationNtt] PlainText destination to store the transformed result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.plainTransformToNtt(plainTextA, parmsId)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainTransformToNtt(plainTextA, parmsId, plainDest)\n     */\n    plainTransformToNtt(\n      plain: PlainText,\n      parmsId: ParmsIdType,\n      destinationNtt?: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): PlainText | void {\n      try {\n        if (destinationNtt) {\n          _instance.plainTransformToNtt(\n            plain.instance,\n            parmsId.instance,\n            destinationNtt.instance,\n            pool\n          )\n          return\n        }\n        const temp = PlainText()\n        _instance.plainTransformToNtt(\n          plain.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a CipherText to NTT domain. This functions applies David Harvey's\n     * number Theoretic Transform separately to each polynomial of a CipherText.\n     * The result is stored in the destinationNtt parameter.\n     *\n     * @function\n     * @name Evaluator#cipherTransformToNtt\n     * @param {CipherText} encrypted CipherText to transform\n     * @param {CipherText} [destinationNtt] CipherText destination to store the transformed result\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.cipherTransformToNtt(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherTransformToNtt(cipherTextA, cipherDest)\n     */\n    cipherTransformToNtt(\n      encrypted: CipherText,\n      destinationNtt?: CipherText\n    ): CipherText | void {\n      try {\n        if (destinationNtt) {\n          _instance.cipherTransformToNtt(\n            encrypted.instance,\n            destinationNtt.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherTransformToNtt(encrypted.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a CipherText back from NTT domain. This functions applies the\n     * inverse of David Harvey's number Theoretic Transform separately to each\n     * polynomial of a CipherText. The result is stored in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#cipherTransformFromNtt\n     * @param {CipherText} encryptedNtt CipherText to transform\n     * @param {CipherText} [destination] CipherText destination to store the transformed result\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * // ... after cipherTransformToNtt ...\n     * const resultCipher = evaluator.cipherTransformFromNtt(cipherTextANtt)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherTransformFromNtt(cipherTextANtt, cipherDest)\n     */\n    cipherTransformFromNtt(\n      encryptedNtt: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherTransformFromNtt(\n            encryptedNtt.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherTransformFromNtt(encryptedNtt.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Applies a Galois automorphism to a CipherText and writes the result to the\n     * destination parameter. To evaluate the Galois automorphism, an appropriate\n     * set of Galois keys must also be provided. Dynamic memory allocations in\n     * the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * The desired Galois automorphism is given as a Galois element, and must be\n     * an odd integer in the interval [1, M-1], where M = 2*N, and N = degree(poly_modulus).\n     * Used with batching, a Galois element 3^i % M corresponds to a cyclic row\n     * rotation i steps to the left, and a Galois element 3^(N/2-i) % M corresponds\n     * to a cyclic row rotation i steps to the right. The Galois element M-1 corresponds\n     * to a column rotation (row swap) in BFV, and complex conjugation in CKKS.\n     * In the polynomial view (not batching), a Galois automorphism by a Galois\n     * element p changes Enc(plain(x)) to Enc(plain(x^p)).\n     *\n     * @function\n     * @name Evaluator#applyGalois\n     * @param {CipherText} encrypted CipherText to apply the automorphism\n     * @param {number} galoisElt number representing the Galois element\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * ...\n     * const evaluator = seal.Evaluator(context)\n     * const arr = Int32Array.from({ length: encoder.slotCount }, (_, i) => i)\n     * const plain = encoder.encode(arr)\n     * const cipher = encryptor.encrypt(plain)\n     * const cipherDest = seal.CipherText()\n     * const galElt = 2 * parms.polyModulusDegree - 1\n     * evaluator.applyGalois(cipher, galElt, galoisKeys, cipherDest)\n     */\n    applyGalois(\n      encrypted: CipherText,\n      galoisElt: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.applyGalois(\n            encrypted.instance,\n            galoisElt,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.applyGalois(\n          encrypted.instance,\n          galoisElt,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText matrix rows cyclically. When batching is used with the\n     * BFV scheme, this function rotates the encrypted PlainText matrix rows\n     * cyclically to the left (steps > 0) or to the right (steps < 0) and writes\n     * the result to the destination parameter. Since the size of the batched\n     * matrix is 2-by-(N/2), where N is the degree of the polynomial modulus,\n     * the number of steps to rotate must have absolute value at most N/2-1. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateRows\n     * @param {CipherText} encrypted CipherText to rotate rows\n     * @param {number} steps Int representing steps to rotate (negative = right, positive = left)\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateRows(cipherTextA, 3, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateRows(cipherTextA, 3, galoisKeys, cipherDest)\n     */\n    rotateRows(\n      encrypted: CipherText,\n      steps: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateRows(\n            encrypted.instance,\n            steps,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateRows(\n          encrypted.instance,\n          steps,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText matrix columns cyclically. When batching is used with\n     * the BFV scheme, this function rotates the encrypted PlainText matrix columns\n     * cyclically, and writes the result to the destination parameter. Since the\n     * size of the batched matrix is 2-by-(N/2), where N is the degree of the\n     * polynomial modulus, this means simply swapping the two rows. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateColumns\n     * @param {CipherText} encrypted CipherText to rotate columns\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateColumns(cipherTextA, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateColumns(cipherTextA, galoisKeys, cipherDest)\n     */\n    rotateColumns(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateColumns(\n            encrypted.instance,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateColumns(\n          encrypted.instance,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText vector cyclically. When using the CKKS scheme, this function\n     * rotates the encrypted PlainText vector cyclically to the left (steps > 0)\n     * or to the right (steps < 0) and writes the result to the destination parameter.\n     * Since the size of the batched matrix is 2-by-(N/2), where N is the degree\n     * of the polynomial modulus, the number of steps to rotate must have absolute\n     * value at most N/2-1. Dynamic memory allocations in the process are allocated\n     * from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateVector\n     * @param {CipherText} encrypted CipherText to rotate the entire vector\n     * @param {number} steps Int representing steps to rotate (negative = right, positive = left)\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateVector(cipherTextA, 3, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateVector(cipherTextA, 3, galoisKeys, cipherDest)\n     */\n    rotateVector(\n      encrypted: CipherText,\n      steps: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateVector(\n            encrypted.instance,\n            steps,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateVector(\n          encrypted.instance,\n          steps,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Complex conjugates PlainText slot values. When using the CKKS scheme, this\n     * function complex conjugates all values in the underlying PlainText, and\n     * writes the result to the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#complexConjugate\n     * @param {CipherText} encrypted CipherText to complex conjugate\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the conjugated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.complexConjugate(cipherTextA, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.complexConjugate(cipherTextA, galoisKeys, cipherDest)\n     */\n    complexConjugate(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.complexConjugate(\n            encrypted.instance,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.complexConjugate(\n          encrypted.instance,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sum all elements in the encrypted CipherText. The resulting CipherText contains the sum in every element.\n     *\n     * @function\n     * @name Evaluator#sumElements\n     * @param {CipherText} encrypted CipherText to sum elements\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.sumElements(cipherTextA, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.sumElements(cipherTextA, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    sumElements(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.sumElements(\n            encrypted.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.sumElements(\n          encrypted.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Perform the dot product (A.B) of two CipherTexts The resulting CipherText contains the dot product in every\n     * element.\n     *\n     * @function\n     * @name Evaluator#dotProduct\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {RelinKeys} relinKeys RelinKeys used to perform relinearization after multiplication\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.dotProduct(cipherTextA, cipherTextB, relinKeys, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.dotProduct(cipherTextA, cipherTextB, relinKeys, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    dotProduct(\n      a: CipherText,\n      b: CipherText,\n      relinKeys: RelinKeys,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiply(a.instance, b.instance, destination.instance, pool)\n          _instance.relinearize(\n            destination.instance,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          _instance.sumElements(\n            destination.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.multiply(a.instance, b.instance, newDest.instance, pool)\n        _instance.relinearize(\n          newDest.instance,\n          relinKeys.instance,\n          newDest.instance,\n          pool\n        )\n        _instance.sumElements(\n          newDest.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Perform the dot product (A.B) of CipherText (A) and PlainText (B). The resulting CipherText contains the dot\n     * product in every element.\n     *\n     * @function\n     * @name Evaluator#dotProductPlain\n     * @param {CipherText} a CipherText operand A\n     * @param {PlainText} b PlainText operand B\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encoding / encrypting some data ...\n     * const resultCipher = evaluator.dotProductPlain(cipherTextA, plainTextB, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.dotProductPlain(cipherTextA, plainTextB, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    dotProductPlain(\n      a: CipherText,\n      b: PlainText,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiplyPlain(\n            a.instance,\n            b.instance,\n            destination.instance,\n            pool\n          )\n          _instance.sumElements(\n            destination.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.multiplyPlain(a.instance, b.instance, newDest.instance, pool)\n        _instance.sumElements(\n          newDest.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EvaluatorInit = ({\n  loader\n}: LoaderOptions): EvaluatorDependencies => {\n  const library: Library = loader.library\n  return EvaluatorConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type ExceptionDependencies = {\n  (): ExceptionConstructorOptions\n}\n\nexport type ExceptionConstructorOptions = {\n  (): Exception\n}\n\nexport type Exception = {\n  readonly safe: (error: number | Error | string) => Error\n}\n\nconst ExceptionConstructor = (\n  library: Library\n): ExceptionDependencies => (): ExceptionConstructorOptions => (): Exception => {\n  // Static methods\n  const _getException = library.getException\n\n  /**\n   * @implements Exception\n   */\n\n  /**\n   * @interface Exception\n   */\n  return {\n    /**\n     * Takes a caught exception in SEAL library and gets a safe error string\n     *\n     * @function\n     * @name Exception.safe\n     * @param {(number|Error|string)} error Unsafe error to normalize\n     * @returns {Error}\n     */\n    safe(error: number | Error | string): Error {\n      if (typeof error === 'number') {\n        return new Error(_getException(error))\n      }\n\n      if (error instanceof Error) {\n        return error\n      }\n      return new Error(error || 'Unknown Error!')\n    }\n  }\n}\n\nexport const ExceptionInit = ({\n  loader\n}: LoaderOptions): ExceptionDependencies => {\n  const library: Library = loader.library\n  return ExceptionConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type GaloisKeysDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type GaloisKeysDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: GaloisKeysDependencyOptions): GaloisKeysConstructorOptions\n}\n\nexport type GaloisKeysConstructorOptions = {\n  (): GaloisKeys\n}\n\nexport type GaloisKeys = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly size: number\n  readonly getIndex: (galoisElt: number) => number\n  readonly hasKey: (galoisElt: number) => boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: GaloisKeys) => void\n  readonly clone: () => GaloisKeys\n  readonly move: (key: GaloisKeys) => void\n}\n\nconst GaloisKeysConstructor = (library: Library): GaloisKeysDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: GaloisKeysDependencyOptions): GaloisKeysConstructorOptions => (): GaloisKeys => {\n  const Constructor = library.GaloisKeys\n  let _instance = new Constructor()\n\n  /**\n   * @implements GaloisKeys\n   */\n\n  /**\n   * @interface GaloisKeys\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name GaloisKeys#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name GaloisKeys#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name GaloisKeys#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the current number of keyswitching keys. Only keys that are\n     * non-empty are counted.\n     *\n     * @readonly\n     * @name GaloisKeys#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * Returns the index of a Galois key in the backing KSwitchKeys instance that\n     * corresponds to the given Galois element, assuming that it exists in the\n     * backing KSwitchKeys.\n     *\n     * @function\n     * @name GaloisKeys#getIndex\n     * @param {number} galoisElt The Galois element\n     * @returns {number} The index of the galois element\n     */\n    getIndex(galoisElt: number): number {\n      try {\n        return _instance.getIndex(galoisElt)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Returns whether a Galois key corresponding to a given Galois element exists.\n     *\n     * @function\n     * @name GaloisKeys#hasKey\n     * @param {number} galoisElt The Galois element\n     * @returns {boolean} True if the key exists\n     */\n    hasKey(galoisElt: number): boolean {\n      try {\n        return _instance.hasKey(galoisElt)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name GaloisKeys#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the GaloisKeys as a binary Uint8Array\n     *\n     * @function\n     * @name GaloisKeys#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the GaloisKeys in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a GaloisKeys from a base64 string\n     *\n     * @function\n     * @name GaloisKeys#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a GaloisKeys from an Uint8Array holding binary data\n     *\n     * @function\n     * @name GaloisKeys#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing GaloisKeys and overwrite this instance\n     *\n     * @function\n     * @name GaloisKeys#copy\n     * @param {GaloisKeys} key GaloisKeys to copy\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = seal.GaloisKeys()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: GaloisKeys) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this GaloisKeys\n     *\n     * @function\n     * @name GaloisKeys#clone\n     * @returns {GaloisKeys}\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): GaloisKeys {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = GaloisKeysConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a GaloisKeys into this one and delete the old reference\n     *\n     * @function\n     * @name GaloisKeys#move\n     * @param {GaloisKeys} key GaloisKeys to move\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = seal.GaloisKeys()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: GaloisKeys) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const GaloisKeysInit = ({\n  loader\n}: LoaderOptions): GaloisKeysDependencies => {\n  const library: Library = loader.library\n  return GaloisKeysConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { Context } from './context'\nimport { SecretKey, SecretKeyConstructorOptions } from './secret-key'\nimport { RelinKeys, RelinKeysConstructorOptions } from './relin-keys'\nimport { Serializable, SerializableConstructorOptions } from './serializable'\nimport { PublicKey, PublicKeyConstructorOptions } from './public-key'\nimport { GaloisKeys, GaloisKeysConstructorOptions } from './galois-keys'\n\nexport type KeyGeneratorDependencyOptions = {\n  readonly Exception: Exception\n  readonly PublicKey: PublicKeyConstructorOptions\n  readonly SecretKey: SecretKeyConstructorOptions\n  readonly RelinKeys: RelinKeysConstructorOptions\n  readonly GaloisKeys: GaloisKeysConstructorOptions\n  readonly Serializable: SerializableConstructorOptions\n}\n\nexport type KeyGeneratorDependencies = {\n  ({\n    Exception,\n    PublicKey,\n    SecretKey,\n    RelinKeys,\n    GaloisKeys,\n    Serializable\n  }: KeyGeneratorDependencyOptions): KeyGeneratorConstructorOptions\n}\n\nexport type KeyGeneratorConstructorOptions = {\n  (context: Context, secretKey?: SecretKey): KeyGenerator\n}\n\nexport type KeyGenerator = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly secretKey: () => SecretKey\n  readonly createPublicKeySerializable: () => Serializable\n  readonly createPublicKey: () => PublicKey\n  readonly createRelinKeysSerializable: () => Serializable\n  readonly createRelinKeys: () => RelinKeys\n  readonly createGaloisKeysSerializable: (steps?: Int32Array) => Serializable\n  readonly createGaloisKeys: (steps?: Int32Array) => GaloisKeys\n}\n\nconst KeyGeneratorConstructor = (\n  library: Library\n): KeyGeneratorDependencies => ({\n  Exception,\n  PublicKey,\n  SecretKey,\n  RelinKeys,\n  GaloisKeys,\n  Serializable\n}: KeyGeneratorDependencyOptions): KeyGeneratorConstructorOptions => (\n  context,\n  secretKey\n): KeyGenerator => {\n  const Constructor = library.KeyGenerator\n  let _instance = constructInstance(context, secretKey)\n\n  function constructInstance(context: Context, secretKey?: SecretKey) {\n    try {\n      if (secretKey) {\n        return new Constructor(context.instance, secretKey.instance)\n      }\n      return new Constructor(context.instance)\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements KeyGenerator\n   */\n\n  /**\n   * @interface KeyGenerator\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name KeyGenerator#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name KeyGenerator#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name KeyGenerator#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Return the generated SecretKey\n     *\n     * @function\n     * @name KeyGenerator#secretKey\n     * @returns {SecretKey} The secret key that was generated upon instantiation of this KeyGenerator\n     */\n    secretKey(): SecretKey {\n      try {\n        const key = SecretKey()\n        const instance = _instance.secretKey()\n        key.inject(instance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Create a new PublicKey instance\n     *\n     * @function\n     * @name KeyGenerator#createPublicKey\n     * @returns {PublicKey} A new PublicKey instance\n     */\n    createPublicKey(): PublicKey {\n      try {\n        const key = PublicKey()\n        _instance.createPublicKey(key.instance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Create a new, Serializable PublicKey instance\n     *\n     * @function\n     * @name KeyGenerator#createPublicKeySerializable\n     * @returns {Serializable<PublicKey>} A new, serializable, PublicKey instance\n     */\n    createPublicKeySerializable(): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createPublicKeySerializable()\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns relinearization keys. This function returns\n     * relinearization keys in a fully expanded form and is meant to be used\n     * primarily for demo, testing, and debugging purposes.\n     *\n     * @function\n     * @name KeyGenerator#createRelinKeys\n     * @returns {RelinKeys} New RelinKeys from the KeyGenerator's internal secret key\n     */\n    createRelinKeys(): RelinKeys {\n      try {\n        const keys = RelinKeys()\n        _instance.createRelinKeys(keys.instance)\n        return keys\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns relinearization keys as a serializable object.\n     *\n     * Half of the key data is pseudo-randomly generated from a seed to reduce\n     * the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     *\n     * @function\n     * @name KeyGenerator#createRelinKeysSerializable\n     * @returns {Serializable<RelinKeys>} New, serializable RelinKeys from the KeyGenerator's internal secret key\n     */\n    createRelinKeysSerializable(): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createRelinKeysSerializable()\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns Galois keys. This function returns Galois keys in\n     * a fully expanded form and is meant to be used primarily for demo, testing,\n     * and debugging purposes. The user can optionally give an input a vector of desired\n     * Galois rotation step counts, where negative step counts correspond to\n     * rotations to the right and positive step counts correspond to rotations to\n     * the left. A step count of zero can be used to indicate a column rotation\n     * in the BFV scheme complex conjugation in the CKKS scheme.\n     *\n     * @function\n     * @name KeyGenerator#createGaloisKeys\n     * @param {Int32Array} [steps=Int32Array.from([])] Specific Galois Elements to generate\n     * @returns {GaloisKeys} New GaloisKeys from the KeyGenerator's internal secret key\n     */\n    createGaloisKeys(steps: Int32Array = Int32Array.from([])): GaloisKeys {\n      try {\n        const keys = GaloisKeys()\n        _instance.createGaloisKeys(steps, keys.instance)\n        return keys\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns Galois keys as a serializable object. This function\n     * creates specific Galois keys that can be used to apply specific Galois\n     * automorphisms on encrypted data. The user can optionally give an input a vector\n     * of desired Galois rotation step counts, where negative step counts\n     * correspond to rotations to the right and positive step counts correspond\n     * to rotations to the left. A step count of zero can be used to indicate\n     * a column rotation in the BFV scheme complex conjugation in the CKKS scheme.\n     * Half of the key data is pseudo-randomly generated from a seed to reduce\n     * the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     * @function\n     * @name KeyGenerator#createGaloisKeysSerializable\n     * @param {Int32Array} [steps=Int32Array.from([])] Specific Galois Elements to generate\n     * @returns {Serializable<GaloisKeys>} Base64 encoded string\n     */\n    createGaloisKeysSerializable(\n      steps: Int32Array = Int32Array.from([])\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createGaloisKeysSerializable(steps)\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const KeyGeneratorInit = ({\n  loader\n}: LoaderOptions): KeyGeneratorDependencies => {\n  const library: Library = loader.library\n  return KeyGeneratorConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type MemoryPoolHandleDependencies = {\n  (): MemoryPoolHandleConstructorOptions\n}\n\nexport type MemoryPoolHandleConstructorOptions = {\n  (): MemoryPoolHandle\n}\n\nexport type MemoryPoolHandle = {\n  readonly global: any\n  readonly threadLocal: any\n}\n\nconst MemoryPoolHandleConstructor = (\n  library: Library\n): MemoryPoolHandleDependencies => (): MemoryPoolHandleConstructorOptions => (): MemoryPoolHandle => {\n  // Static methods\n  const _global = library.MemoryPoolHandle.MemoryPoolHandleGlobal\n  const _threadLocal = library.MemoryPoolHandle.MemoryPoolHandleThreadLocal\n\n  /**\n   * @implements MemoryPoolHandle\n   */\n\n  /**\n   * @interface MemoryPoolHandle\n   */\n  return {\n    /**\n     * The MemoryPoolHandle pointing to the global memory pool.\n     *\n     * @readonly\n     * @name MemoryPoolHandle.global\n     * @type {MemoryPoolHandle.global}\n     */\n    get global() {\n      /**\n       * @typedef {MemoryPoolHandle.global} MemoryPoolHandle.global\n       */\n      return _global()\n    },\n\n    /**\n     * The MemoryPoolHandle pointing to the thread-local memory pool.\n     *\n     * @readonly\n     * @name MemoryPoolHandle.threadLocal\n     * @type {MemoryPoolHandle.threadLocal}\n     */\n    get threadLocal() {\n      /**\n       * @typedef {MemoryPoolHandle.threadLocal} MemoryPoolHandle.threadLocal\n       */\n      return _threadLocal()\n    }\n  }\n}\n\nexport const MemoryPoolHandleInit = ({\n  loader\n}: LoaderOptions): MemoryPoolHandleDependencies => {\n  const library: Library = loader.library\n  return MemoryPoolHandleConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\n\nexport type ModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type ModulusDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: ModulusDependencyOptions): ModulusConstructorOptions\n}\n\nexport type ModulusConstructorOptions = {\n  (value: BigInt): Modulus\n}\n\nexport type Modulus = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly setValue: (value: BigInt) => void\n  readonly value: BigInt\n  readonly bitCount: number\n  readonly isZero: boolean\n  readonly isPrime: boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (encoded: string) => void\n  readonly loadArray: (array: Uint8Array) => void\n}\n\nconst ModulusConstructor = (library: Library): ModulusDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: ModulusDependencyOptions): ModulusConstructorOptions => (\n  value: BigInt\n): Modulus => {\n  // Static methods\n  const Constructor = library.Modulus\n\n  let _instance = createModulus(value)\n\n  function createModulus(value: BigInt) {\n    try {\n      const inst = new Constructor()\n      inst.setValue(value.toString())\n      return inst\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n\n  /**\n   * @implements Modulus\n   */\n\n  /**\n   * @interface Modulus\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Modulus#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name Modulus#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Modulus#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Loads a Modulus from a string representing an uint64 value.\n     *\n     * @function\n     * @name Modulus#setValue\n     * @param {BigInt} value BigInt value to set\n     */\n    setValue(value: BigInt) {\n      try {\n        _instance.setValue(value.toString())\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The value of the current Modulus as a BigInt.\n     *\n     * @readonly\n     * @name Modulus#value\n     * @type {BigInt}\n     */\n    get value() {\n      // eslint-disable-next-line no-undef\n      return BigInt(_instance.value())\n    },\n\n    /**\n     * The significant bit count of the value of the current Modulus.\n     *\n     * @readonly\n     * @name Modulus#bitCount\n     * @type {number}\n     */\n    get bitCount() {\n      return _instance.bitCount()\n    },\n\n    /**\n     * Whether the value of the current Modulus is zero.\n     *\n     * @readonly\n     * @name Modulus#isZero\n     * @type {boolean}\n     */\n    get isZero() {\n      return _instance.isZero()\n    },\n\n    /**\n     * Whether the value of the current Modulus is a prime number.\n     *\n     * @readonly\n     * @name Modulus#isPrime\n     * @type {boolean}\n     */\n    get isPrime() {\n      return _instance.isPrime()\n    },\n\n    /**\n     * Save the Modulus as a base64 string\n     *\n     * @function\n     * @name Modulus#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the Modulus as a binary Uint8Array\n     *\n     * @function\n     * @name Modulus#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the Modulus in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a Modulus from a base64 string\n     *\n     * @function\n     * @name SecretKey#load\n     * @param {string} encoded Base64 encoded string\n     */\n    load(encoded: string) {\n      try {\n        _instance.loadFromString(encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a Modulus from an Uint8Array holding binary data\n     *\n     * @function\n     * @name SecretKey#loadArray\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(array: Uint8Array) {\n      try {\n        _instance.loadFromArray(array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const ModulusInit = ({ loader }: LoaderOptions): ModulusDependencies => {\n  const library: Library = loader.library\n  return ModulusConstructor(library)\n}\n","import { LoaderOptions, Instance, Library } from './seal'\nimport { Exception } from './exception'\n\nexport type ParmsIdTypeDependencyOptions = {\n  readonly Exception: Exception\n}\n\nexport type ParmsIdTypeDependencies = {\n  ({ Exception }: ParmsIdTypeDependencyOptions): ParmsIdTypeConstructorOptions\n}\n\nexport type ParmsIdTypeConstructorOptions = {\n  (): ParmsIdType\n}\n\nexport type ParmsIdType = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly values: BigUint64Array\n}\n\nconst ParmsIdTypeConstructor = (library: Library): ParmsIdTypeDependencies => ({\n  Exception\n}: ParmsIdTypeDependencyOptions): ParmsIdTypeConstructorOptions => (): ParmsIdType => {\n  const Constructor = library.ParmsIdType\n\n  let _instance: Instance\n\n  /**\n   * @implements ParmsIdType\n   */\n\n  /**\n   * @interface ParmsIdType\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name ParmsIdType#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name ParmsIdType#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name ParmsIdType#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * The values of the current ParmsIdType as an Array of BigInts.\n     *\n     * @readonly\n     * @name ParmsIdType#values\n     * @type {BigUint64Array}\n     */\n    get values() {\n      try {\n        const instance = _instance.values()\n        return BigUint64Array.from(instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const ParmsIdTypeInit = ({\n  loader\n}: LoaderOptions): ParmsIdTypeDependencies => {\n  const library: Library = loader.library\n  return ParmsIdTypeConstructor(library)\n}\n","import { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\nimport { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { VectorConstructorOptions } from './vector'\nimport { INVALID_PLAIN_CONSRUCTOR_OPTIONS } from './constants'\nexport type PlainTextDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PlainTextDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    ParmsIdType,\n    MemoryPoolHandle,\n    Vector\n  }: PlainTextDependencyOptions): PlainTextConstructorOptions\n}\n\nexport type PlainTextConstructorOptions = {\n  ({\n    capacity,\n    coeffCount,\n    pool\n  }?: {\n    capacity?: number\n    coeffCount?: number\n    pool?: MemoryPoolHandle\n  }): PlainText\n}\n\nexport type PlainText = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly reserve: (capacity: number) => void\n  readonly shrinkToFit: () => void\n  readonly release: () => void\n  readonly resize: (coeffCount: number) => void\n  readonly setZero: () => void\n  readonly isZero: boolean\n  readonly capacity: number\n  readonly coeffCount: number\n  readonly significantCoeffCount: number\n  readonly nonzeroCoeffCount: number\n  readonly toPolynomial: () => string\n  readonly isNttForm: boolean\n  readonly parmsId: ParmsIdType\n  readonly scale: number\n  readonly setScale: (scale: number) => void\n  readonly pool: MemoryPoolHandle\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (plain: PlainText) => void\n  readonly clone: () => PlainText\n  readonly move: (plain: PlainText) => void\n}\n\nconst PlainTextConstructor = (library: Library): PlainTextDependencies => ({\n  Exception,\n  ComprModeType,\n  ParmsIdType,\n  MemoryPoolHandle,\n  Vector\n}: PlainTextDependencyOptions): PlainTextConstructorOptions => ({\n  capacity,\n  coeffCount,\n  pool = MemoryPoolHandle.global\n} = {}): PlainText => {\n  // Static methods\n  const Constructor = library.Plaintext\n\n  let _instance = construct({\n    capacity,\n    coeffCount,\n    pool\n  })\n\n  function construct({\n    capacity,\n    coeffCount,\n    pool = MemoryPoolHandle.global\n  }: {\n    capacity?: number\n    coeffCount?: number\n    pool?: MemoryPoolHandle\n  }) {\n    try {\n      if (capacity === undefined && coeffCount === undefined) {\n        return new Constructor(pool)\n      } else if (capacity === undefined && coeffCount !== undefined) {\n        return new Constructor(coeffCount, pool)\n      } else if (capacity !== undefined && coeffCount !== undefined) {\n        return new Constructor(capacity, coeffCount, pool)\n      } else {\n        throw new Error(INVALID_PLAIN_CONSRUCTOR_OPTIONS)\n      }\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements PlainText\n   */\n\n  /**\n   * @interface PlainText\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name PlainText#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name PlainText#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name PlainText#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of a plaintext\n     * with given capacity.\n     *\n     * @function\n     * @name PlainText#reserve\n     * @param {number} capacity The capacity to reserve\n     */\n    reserve(capacity: number) {\n      try {\n        return _instance.reserve(capacity)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of the current\n     * PlainText and copies it over to the new location. This function is meant\n     * to reduce the memory use of the PlainText to smallest possible and can be\n     * particularly important after modulus switching.\n     *\n     * @function\n     * @name PlainText#shrinkToFit\n     */\n    shrinkToFit() {\n      _instance.shrinkToFit()\n    },\n\n    /**\n     * Resets the PlainText. This function releases any memory allocated by the\n     * PlainText, returning it to the memory pool.\n     *\n     * @function\n     * @name PlainText#release\n     */\n    release() {\n      _instance.release()\n    },\n\n    /**\n     * Resizes the PlainText to have a given coefficient count. The PlainText\n     * is automatically reallocated if the new coefficient count does not fit in\n     * the current capacity.\n     *\n     * @function\n     * @name PlainText#resize\n     * @param {number} coeffCount The number of coefficients in the plaintext polynomial\n     */\n    resize(coeffCount: number) {\n      try {\n        _instance.resize(coeffCount)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the PlainText polynomial to zero.\n     *\n     * @function\n     * @name PlainText#setZero\n     */\n    setZero() {\n      _instance.setZero()\n    },\n\n    /**\n     * Whether the current PlainText polynomial has all zero coefficients.\n     *\n     * @readonly\n     * @name PlainText#isZero\n     * @type {boolean}\n     */\n    get isZero() {\n      return _instance.isZero()\n    },\n\n    /**\n     * The capacity of the current allocation.\n     *\n     * @readonly\n     * @name PlainText#capacity\n     * @type {number}\n     */\n    get capacity() {\n      return _instance.capacity()\n    },\n\n    /**\n     * The coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#coeffCount\n     * @type {number}\n     */\n    get coeffCount() {\n      return _instance.coeffCount()\n    },\n\n    /**\n     * The significant coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#significantCoeffCount\n     * @type {number}\n     */\n    get significantCoeffCount() {\n      return _instance.significantCoeffCount()\n    },\n\n    /**\n     * Returns the non-zero coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#nonzeroCoeffCount\n     * @type {number}\n     */\n    get nonzeroCoeffCount() {\n      return _instance.nonzeroCoeffCount()\n    },\n\n    /**\n     * Returns a human-readable string description of the PlainText polynomial.\n     *\n     * The returned string is of the form \"7FFx^3 + 1x^1 + 3\" with a format\n     * summarized by the following:\n     * 1. Terms are listed in order of strictly decreasing exponent\n     * 2. Coefficient values are non-negative and in hexadecimal format (hexadecimal\n     * letters are in upper-case)\n     * 3. Exponents are positive and in decimal format\n     * 4. Zero coefficient terms (including the constant term) are omitted unless\n     * the polynomial is exactly 0 (see rule 9)\n     * 5. Term with the exponent value of one is written as x^1\n     * 6. Term with the exponent value of zero (the constant term) is written as\n     * just a hexadecimal number without x or exponent\n     * 7. Terms are separated exactly by <space>+<space>\n     * 8. Other than the +, no other terms have whitespace\n     * 9. If the polynomial is exactly 0, the string \"0\" is returned\n     *\n     * @function\n     * @name PlainText#toPolynomial\n     * @throws std::invalid_argument if the PlainText is in NTT transformed form\n     * @returns {string} Polynomial string\n     */\n    toPolynomial(): string {\n      try {\n        return _instance.toPolynomial()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Whether the PlainText is in NTT form.\n     *\n     * @readonly\n     * @name PlainText#isNttForm\n     * @type {boolean}\n     */\n    get isNttForm() {\n      return _instance.isNttForm()\n    },\n\n    /**\n     * The reference to parmsId of the PlainText. The parmsId must remain zero unless the\n     * PlainText polynomial is in NTT form.\n     *\n     * @see {@link EncryptionParameters} for more information about parmsId.\n     *\n     * @readonly\n     * @name PlainText#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * The reference to the scale. This is only needed when using the CKKS\n     * encryption scheme. The user should have little or no reason to ever change\n     * the scale by hand.\n     *\n     * @readonly\n     * @name PlainText#scale\n     * @type {number}\n     */\n    get scale() {\n      return _instance.scale()\n    },\n\n    /**\n     * Sets the PlainText scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @function\n     * @name PlainText#setScale\n     * @param {number} scale The scale to set\n     */\n    setScale(scale: number) {\n      _instance.setScale(scale)\n    },\n\n    /**\n     * The currently used MemoryPoolHandle.\n     *\n     * @readonly\n     * @name PlainText#pool\n     * @type {MemoryPoolHandle}\n     */\n    get pool() {\n      return _instance.pool()\n    },\n\n    /**\n     * Save the PlainText to a base64 string\n     *\n     * @function\n     * @name PlainText#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the PlainText as a binary Uint8Array\n     *\n     * @function\n     * @name PlainText#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the PlainText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a PlainText from a base64 string\n     *\n     * @function\n     * @name PlainText#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a PlainText from an Uint8Array holding binary data\n     *\n     * @function\n     * @name PlainText#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing PlainText and overwrite this instance\n     *\n     * @function\n     * @name PlainText#copy\n     * @param {PlainText} plain PlainText to copy\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = seal.PlainText()\n     * plainTextB.copy(plainTextA)\n     * // plainTextB holds a copy of plainTextA\n     */\n    copy(plain: PlainText) {\n      try {\n        _instance.copy(plain.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this PlainText\n     *\n     * @function\n     * @name PlainText#clone\n     * @returns {PlainText}\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = plainTextA.clone()\n     * // plainTextB holds a copy of plainTextA\n     */\n    clone(): PlainText {\n      try {\n        const clonedInstance = _instance.clone()\n        const plain = PlainTextConstructor(library)({\n          Exception,\n          ComprModeType,\n          ParmsIdType,\n          MemoryPoolHandle,\n          Vector\n        })()\n        plain.unsafeInject(clonedInstance)\n        return plain\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a PlainText into this one and delete the old reference\n     *\n     * @function\n     * @name PlainText#move\n     * @param {PlainText} plain PlainText to move\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = seal.PlainText()\n     * plainTextB.move(plainTextA)\n     * // plainTextB holds a the instance of plainTextA.\n     * // plainTextA no longer holds an instance\n     */\n    move(plain: PlainText) {\n      try {\n        _instance.move(plain.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        plain.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PlainTextInit = ({\n  loader\n}: LoaderOptions): PlainTextDependencies => {\n  const library: Library = loader.library\n  return PlainTextConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\nimport { Exception } from './exception'\nimport { Modulus, ModulusConstructorOptions } from './modulus'\nimport { Vector, VectorConstructorOptions } from './vector'\n\nexport type PlainModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly Modulus: ModulusConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PlainModulusDependencies = {\n  ({\n    Exception,\n    Modulus,\n    Vector\n  }: PlainModulusDependencyOptions): PlainModulusConstructorOptions\n}\n\nexport type PlainModulusConstructorOptions = {\n  (): PlainModulus\n}\n\nexport type PlainModulus = {\n  readonly Batching: (polyModulusDegree: number, bitSize: number) => Modulus\n  readonly BatchingVector: (\n    polyModulusDegree: number,\n    bitSizes: Int32Array\n  ) => Vector\n}\n\nconst PlainModulusConstructor = (\n  library: Library\n): PlainModulusDependencies => ({\n  Exception,\n  Modulus,\n  Vector\n}: PlainModulusDependencyOptions): PlainModulusConstructorOptions => (): PlainModulus => {\n  // Static methods\n  const _Batching = library.PlainModulus.Batching\n  const _BatchingVector = library.PlainModulus.BatchingVector\n\n  /**\n   * @implements PlainModulus\n   */\n\n  /**\n   * @interface PlainModulus\n   */\n  return {\n    /**\n     * Creates a prime number PlainModulus for use as plainPlainModulus encryption\n     * parameter that supports batching with a given polyPlainModulusDegree.\n     *\n     * @function\n     * @name PlainModulus.Batching\n     * @param {number} polyModulusDegree The degree of the polynomial modulus\n     * @param {number} bitSize The bit-size of the desired prime number\n     * @returns {Modulus} A PlainModulus containing the prime number\n     */\n    Batching(polyModulusDegree: number, bitSize: number): Modulus {\n      try {\n        const smallMod = Modulus(BigInt(0))\n        smallMod.inject(_Batching(polyModulusDegree, bitSize))\n        return smallMod\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Creates several prime number PlainModulus elements that can be used as\n     * plainPlainModulus encryption parameters, each supporting batching with a given\n     * polyPlainModulusDegree.\n     *\n     * @function\n     * @name PlainModulus.BatchingVector\n     * @param {Number} polyPlainModulusDegree The degree of the polynomial modulus\n     * @param {Int32Array} bitSizes Int32Array containing values representing bit-sizes of primes\n     * @returns {Vector} Vector of Modulus containing prime numbers\n     */\n    BatchingVector(\n      polyPlainModulusDegree: number,\n      bitSizes: Int32Array\n    ): Vector {\n      try {\n        const vectBitSizes = Vector()\n        vectBitSizes.from(bitSizes)\n        const vect = _BatchingVector(\n          polyPlainModulusDegree,\n          vectBitSizes.instance\n        )\n        vectBitSizes.delete()\n        return vect\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PlainModulusInit = ({\n  loader\n}: LoaderOptions): PlainModulusDependencies => {\n  const library: Library = loader.library\n  return PlainModulusConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type PublicKeyDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PublicKeyDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: PublicKeyDependencyOptions): PublicKeyConstructorOptions\n}\n\nexport type PublicKeyConstructorOptions = {\n  (): PublicKey\n}\n\nexport type PublicKey = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: PublicKey) => void\n  readonly clone: () => PublicKey\n  readonly move: (key: PublicKey) => void\n}\n\nconst PublicKeyConstructor = (library: Library): PublicKeyDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: PublicKeyDependencyOptions): PublicKeyConstructorOptions => (): PublicKey => {\n  const Constructor = library.PublicKey\n  let _instance = new Constructor()\n\n  /**\n   * @implements PublicKey\n   */\n\n  /**\n   * @interface PublicKey\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name PublicKey#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name PublicKey#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name PublicKey#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name PublicKey#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the PublicKey as a binary Uint8Array\n     *\n     * @function\n     * @name PublicKey#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the PublicKey in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a PublicKey from a base64 string\n     *\n     * @function\n     * @name PublicKey#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a PublicKey from an Uint8Array holding binary data\n     *\n     * @function\n     * @name PublicKey#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing PublicKey and overwrite this instance\n     *\n     * @function\n     * @name PublicKey#copy\n     * @param {PublicKey} key PublicKey to copy\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = seal.PublicKey()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: PublicKey) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this PublicKey\n     *\n     * @function\n     * @name PublicKey#clone\n     * @returns {PublicKey}\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): PublicKey {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = PublicKeyConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a PublicKey into this one and delete the old reference\n     *\n     * @function\n     * @name PublicKey#move\n     * @param {PublicKey} key PublicKey to move\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = seal.PublicKey()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: PublicKey) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PublicKeyInit = ({\n  loader\n}: LoaderOptions): PublicKeyDependencies => {\n  const library: Library = loader.library\n  return PublicKeyConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type RelinKeysDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type RelinKeysDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: RelinKeysDependencyOptions): RelinKeysConstructorOptions\n}\n\nexport type RelinKeysConstructorOptions = {\n  (): RelinKeys\n}\n\nexport type RelinKeys = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly size: number\n  readonly getIndex: (keyPower: number) => number\n  readonly hasKey: (keyPower: number) => boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: RelinKeys) => void\n  readonly clone: () => RelinKeys\n  readonly move: (key: RelinKeys) => void\n}\n\nconst RelinKeysConstructor = (library: Library): RelinKeysDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: RelinKeysDependencyOptions): RelinKeysConstructorOptions => (): RelinKeys => {\n  const Constructor = library.RelinKeys\n  let _instance = new Constructor()\n\n  /**\n   * @implements RelinKeys\n   */\n\n  /**\n   * @interface RelinKeys\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name RelinKeys#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name RelinKeys#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name RelinKeys#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the current number of keyswitching keys. Only keys that are\n     * non-empty are counted.\n     *\n     * @readonly\n     * @name RelinKeys#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * Returns the index of a relinearization key in the backing KSwitchKeys\n     * instance that corresponds to the given secret key power, assuming that\n     * it exists in the backing KSwitchKeys.\n     *\n     * @function\n     * @name RelinKeys#getIndex\n     * @param {number} keyPower The power of the secret key\n     * @returns {number} The index of the relin key\n     */\n    getIndex(keyPower: number): number {\n      try {\n        return _instance.getIndex(keyPower)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Returns whether a relinearization key corresponding to a given power of\n     * the secret key exists.\n     *\n     * @function\n     * @name RelinKeys#hasKey\n     * @param {number} keyPower The power of the secret key\n     * @returns {boolean} True if the power exists\n     */\n    hasKey(keyPower: number): boolean {\n      try {\n        return _instance.hasKey(keyPower)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name RelinKeys#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the RelinKeys as a binary Uint8Array\n     *\n     * @function\n     * @name RelinKeys#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the RelinKeys in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a RelinKeys from a base64 string\n     *\n     * @function\n     * @name RelinKeys#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a RelinKeys from an Uint8Array holding binary data\n     *\n     * @function\n     * @name RelinKeys#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing RelinKeys and overwrite this instance\n     *\n     * @function\n     * @name RelinKeys#copy\n     * @param {RelinKeys} key RelinKeys to copy\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = seal.RelinKeys()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: RelinKeys) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this RelinKeys\n     *\n     * @function\n     * @name RelinKeys#clone\n     * @returns {RelinKeys}\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): RelinKeys {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = RelinKeysConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a RelinKeys into this one and delete the old reference\n     *\n     * @function\n     * @name RelinKeys#move\n     * @param {RelinKeys} key RelinKeys to move\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = seal.RelinKeys()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: RelinKeys) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const RelinKeysInit = ({\n  loader\n}: LoaderOptions): RelinKeysDependencies => {\n  const library: Library = loader.library\n  return RelinKeysConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type SchemeTypeDependencies = {\n  (): SchemeTypeConstructorOptions\n}\n\nexport type SchemeTypeConstructorOptions = {\n  (): SchemeType\n}\n\nexport type SchemeType = {\n  readonly none: any\n  readonly bfv: any\n  readonly ckks: any\n}\n\nconst SchemeTypeConstructor = (\n  library: Library\n): SchemeTypeDependencies => (): SchemeTypeConstructorOptions => (): SchemeType => {\n  // Static methods\n  const _none = library.SchemeType.none\n  const _bfv = library.SchemeType.bfv\n  const _ckks = library.SchemeType.ckks\n\n  /**\n   * @implements SchemeType\n   */\n\n  /**\n   * @interface SchemeType\n   */\n  return {\n    /**\n     * Return the 'none' scheme type\n     *\n     * @readonly\n     * @name SchemeType.none\n     * @type {SchemeType.none}\n     */\n    get none() {\n      /**\n       * @typedef {SchemeType.none} SchemeType.none\n       */\n      return _none\n    },\n\n    /**\n     * Return the 'bfv' scheme type\n     *\n     * @readonly\n     * @name SchemeType.bfv\n     * @type {SchemeType.bfv}\n     */\n    get bfv() {\n      /**\n       * @typedef {SchemeType.bfv} SchemeType.bfv\n       */\n      return _bfv\n    },\n\n    /**\n     * Return the 'ckks' scheme type\n     *\n     * @readonly\n     * @name SchemeType.ckks\n     * @type {SchemeType.ckks}\n     */\n    get ckks() {\n      /**\n       * @typedef {SchemeType.ckks} SchemeType.ckks\n       */\n      return _ckks\n    }\n  }\n}\n\nexport const SchemeTypeInit = ({\n  loader\n}: LoaderOptions): SchemeTypeDependencies => {\n  const library: Library = loader.library\n  return SchemeTypeConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type SecretKeyDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type SecretKeyDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: SecretKeyDependencyOptions): SecretKeyConstructorOptions\n}\n\nexport type SecretKeyConstructorOptions = {\n  (): SecretKey\n}\n\nexport type SecretKey = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: SecretKey) => void\n  readonly clone: () => SecretKey\n  readonly move: (key: SecretKey) => void\n}\n\nconst SecretKeyConstructor = (library: Library): SecretKeyDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: SecretKeyDependencyOptions): SecretKeyConstructorOptions => (): SecretKey => {\n  const Constructor = library.SecretKey\n  let _instance = new Constructor()\n\n  /**\n   * @implements SecretKey\n   */\n\n  /**\n   * @interface SecretKey\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name SecretKey#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name SecretKey#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name SecretKey#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name SecretKey#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the SecretKey as a binary Uint8Array\n     *\n     * @function\n     * @name SecretKey#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the SecretKey in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a SecretKey from a base64 string\n     *\n     * @function\n     * @name SecretKey#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a SecretKey from an Uint8Array holding binary data\n     *\n     * @function\n     * @name SecretKey#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing SecretKey and overwrite this instance\n     *\n     * @function\n     * @name SecretKey#copy\n     * @param {SecretKey} key SecretKey to copy\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = seal.SecretKey()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: SecretKey) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this SecretKey\n     *\n     * @function\n     * @name SecretKey#clone\n     * @returns {SecretKey}\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): SecretKey {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = SecretKeyConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a SecretKey into this one and delete the old reference\n     *\n     * @function\n     * @name SecretKey#move\n     * @param {SecretKey} key SecretKey to move\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = seal.SecretKey()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: SecretKey) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const SecretKeyInit = ({\n  loader\n}: LoaderOptions): SecretKeyDependencies => {\n  const library: Library = loader.library\n  return SecretKeyConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type SecurityLevelDependencies = {\n  (): SecurityLevelConstructorOptions\n}\n\nexport type SecurityLevelConstructorOptions = {\n  (): SecurityLevel\n}\n\nexport type SecurityLevel = {\n  readonly none: any\n  readonly tc128: any\n  readonly tc192: any\n  readonly tc256: any\n}\n\nconst SecurityLevelConstructor = (\n  library: Library\n): SecurityLevelDependencies => (): SecurityLevelConstructorOptions => (): SecurityLevel => {\n  // Static methods\n  const _none = library.SecLevelType.none\n  const _tc128 = library.SecLevelType.tc128\n  const _tc192 = library.SecLevelType.tc192\n  const _tc256 = library.SecLevelType.tc256\n\n  /**\n   * @implements SecurityLevel\n   */\n\n  /**\n   * @interface SecurityLevel\n   */\n  return {\n    /**\n     * Returns the 'none' security level\n     *\n     * @readonly\n     * @name SecurityLevel.none\n     * @type {SecurityLevel.none}\n     */\n    get none() {\n      /**\n       * @typedef {SecurityLevel.none} SecurityLevel.none\n       */\n      return _none\n    },\n\n    /**\n     * Returns the '128' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc128\n     * @type {SecurityLevel.tc128}\n     */\n    get tc128() {\n      /**\n       * @typedef {SecurityLevel.tc128} SecurityLevel.tc128\n       */\n      return _tc128\n    },\n\n    /**\n     * Returns the '192' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc192\n     * @type {SecurityLevel.tc192}\n     */\n    get tc192() {\n      /**\n       * @typedef {SecurityLevel.tc192} SecurityLevel.tc192\n       */\n      return _tc192\n    },\n\n    /**\n     * Returns the '256' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc256\n     * @type {SecurityLevel.tc256}\n     */\n    get tc256() {\n      /**\n       * @typedef {SecurityLevel.tc256} SecurityLevel.tc256\n       */\n      return _tc256\n    }\n  }\n}\nexport const SecurityLevelInit = ({\n  loader\n}: LoaderOptions): SecurityLevelDependencies => {\n  const library: Library = loader.library\n  return SecurityLevelConstructor(library)\n}\n","import { LoaderOptions, Instance, Library } from './seal'\nimport { Exception } from './exception'\nimport { INSTANCE_DELETED, UNSUPPORTED_VECTOR_TYPE } from './constants'\n\nexport type VectorDependencyOptions = {\n  readonly Exception: Exception\n}\n\nexport type VectorDependencies = {\n  ({ Exception }: VectorDependencyOptions): VectorConstructorOptions\n}\n\nexport type VectorConstructorOptions = {\n  (): Vector\n}\n\nexport type Vector = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly from: (array: VectorTypes, type?: StringTypes) => Instance\n  readonly type: string\n  readonly setType: (type: StringTypes) => void\n  readonly size: number\n  readonly getValue: (index: number) => number\n  readonly resize: (size: number, fill: number) => void\n  readonly toArray: () => VectorTypes\n}\n\nexport type VectorTypes =\n  | Uint8Array\n  | Int32Array\n  | Uint32Array\n  | Float64Array\n  | BigInt64Array\n  | BigUint64Array\n\nexport type StringTypes =\n  | 'Uint8Array'\n  | 'Int32Array'\n  | 'Uint32Array'\n  | 'Float64Array'\n  | 'BigInt64Array'\n  | 'BigUint64Array'\n  | 'Modulus'\n\nconst VectorConstructor = (library: Library): VectorDependencies => ({\n  Exception\n}: VectorDependencyOptions): VectorConstructorOptions => (): Vector => {\n  // Static methods\n  const _vecFromArrayUint8 = library.vecFromArrayUint8\n  const _vecFromArrayUint32 = library.vecFromArrayUint32\n  const _vecFromArrayInt32 = library.vecFromArrayInt32\n  const _vecFromArrayFloat64 = library.vecFromArrayFloat64\n  const _vecFromArrayBigInt64 = library.vecFromArrayBigInt64\n  const _vecFromArrayBigUint64 = library.vecFromArrayBigUint64\n  const _vecFromArrayModulus = library.vecFromArrayModulus\n  const _jsArrayUint8FromVec = library.jsArrayUint8FromVec\n  const _jsArrayUint32FromVec = library.jsArrayUint32FromVec\n  const _jsArrayInt32FromVec = library.jsArrayInt32FromVec\n  const _jsArrayFloat64FromVec = library.jsArrayFloat64FromVec\n  const _jsArrayStringFromVecInt64 = library.jsArrayStringFromVecInt64\n  const _jsArrayStringFromVecUint64 = library.jsArrayStringFromVecUint64\n  const _jsArrayStringFromVecModulus = library.jsArrayStringFromVecModulus\n\n  let _instance: Instance\n  let _type: StringTypes\n  /**\n   * @implements Vector\n   */\n\n  /**\n   * @interface Vector\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Vector#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Vector#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Vector#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Converts a JS TypedArray into a vector\n     *\n     * @function\n     * @name Vector#from\n     * @param {VectorTypes} array The TypedArray to convert\n     * @param {StringTypes} [type] An optional type override - useful for 'Modulus' only\n     */\n    from(array: VectorTypes, type?: StringTypes) {\n      try {\n        _type = type ? type : (array.constructor.name as StringTypes)\n        switch (_type) {\n          case 'Uint8Array':\n            _instance = _vecFromArrayUint8(array)\n            break\n          case 'Int32Array':\n            _instance = _vecFromArrayInt32(array)\n            break\n          case 'Uint32Array':\n            _instance = _vecFromArrayUint32(array)\n            break\n          case 'Float64Array':\n            _instance = _vecFromArrayFloat64(array)\n            break\n          case 'BigInt64Array':\n            _instance = _vecFromArrayBigInt64(array.toString().split(','))\n            break\n          case 'BigUint64Array':\n            _instance = _vecFromArrayBigUint64(array.toString().split(','))\n            break\n          case 'Modulus':\n            _instance = _vecFromArrayModulus(array.toString().split(','))\n            break\n          default:\n            throw new Error(UNSUPPORTED_VECTOR_TYPE)\n        }\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The Vector type\n     *\n     * @readonly\n     * @name Vector#type\n     */\n    get type(): StringTypes {\n      return _type\n    },\n\n    /**\n     * Set the Vector type\n     *\n     * @function\n     * @name Vector#setType\n     * @param {StringTypes} type the type of the vector\n     */\n    setType(type: StringTypes) {\n      _type = type\n    },\n\n    /**\n     * The vector size\n     *\n     * @readonly\n     * @name Vector#size\n     * @type {number}\n     */\n    get size(): number {\n      return _instance.size()\n    },\n\n    /**\n     * Get a value pointed to by the specified index\n     *\n     * @function\n     * @name Vector#getValue\n     * @param {number} index Index of the Vector\n     * @returns {number} Value of the element in the Vector pointed to by the index\n     */\n    getValue(index: number): number {\n      try {\n        return _instance.get(index)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resizes a vector to the given size\n     *\n     * @function\n     * @name Vector#resize\n     * @param {number} size number of elements to resize\n     * @param {number} fill Data to fill the vector with\n     */\n    resize(size: number, fill: number) {\n      try {\n        _instance.resize(size, fill)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy a vector's data into a Typed Array\n     *\n     * Note: we cannot simply return a view on the underlying ArrayBuffer\n     * because WASM memory can grow and cause all the views to become\n     * neutered. We have to perform a hard copy to get data from WASM heap to JS.\n     *\n     * @function\n     * @name Vector#toArray\n     * @returns {VectorTypes} TypedArray containing values from the Vector\n     */\n    toArray(): VectorTypes {\n      if (!_instance) {\n        throw new Error(INSTANCE_DELETED)\n      }\n      switch (_type) {\n        case 'Uint8Array':\n          return Uint8Array.from(_jsArrayUint8FromVec(_instance))\n        case 'Int32Array':\n          return Int32Array.from(_jsArrayInt32FromVec(_instance))\n        case 'Uint32Array':\n          return Uint32Array.from(_jsArrayUint32FromVec(_instance))\n        case 'Float64Array':\n          return Float64Array.from(_jsArrayFloat64FromVec(_instance))\n        case 'BigInt64Array':\n          return BigInt64Array.from(_jsArrayStringFromVecInt64(_instance))\n        case 'BigUint64Array':\n          return BigUint64Array.from(_jsArrayStringFromVecUint64(_instance))\n        case 'Modulus':\n          return BigUint64Array.from(_jsArrayStringFromVecModulus(_instance))\n        default:\n          throw new Error(UNSUPPORTED_VECTOR_TYPE)\n      }\n    }\n  }\n}\n\nexport const VectorInit = ({ loader }: LoaderOptions): VectorDependencies => {\n  const library: Library = loader.library\n  return VectorConstructor(library)\n}\n","import { SEALLibrary } from './implementation/seal'\nimport sealLibrary from 'seal_allows_wasm_node'\nimport { Loader, createLoader } from './main/loader'\nimport { SEAL } from './main/seal'\n/**\n * Export a function which loads the proper build\n */\nconst loader = async (): Promise<Loader> => createLoader(sealLibrary)\n\n/**\n * Main export for node-seal\n */\nexport default async (): Promise<SEALLibrary> => SEAL(loader)\n","import { SEALLibrary, SEALConstructor } from '../implementation/seal'\nimport { BatchEncoderInit } from '../implementation/batch-encoder'\nimport { CipherTextInit } from '../implementation/cipher-text'\nimport { CKKSEncoderInit } from '../implementation/ckks-encoder'\nimport { CoeffModulusInit } from '../implementation/coeff-modulus'\nimport { ComprModeTypeInit } from '../implementation/compr-mode-type'\nimport { ContextDataInit } from '../implementation/context-data'\nimport { ContextInit } from '../implementation/context'\nimport { DecryptorInit } from '../implementation/decryptor'\nimport { EncryptionParameterQualifiersInit } from '../implementation/encryption-parameter-qualifiers'\nimport { EncryptionParametersInit } from '../implementation/encryption-parameters'\nimport { EncryptorInit } from '../implementation/encryptor'\nimport { EvaluatorInit } from '../implementation/evaluator'\nimport { ExceptionInit } from '../implementation/exception'\nimport { GaloisKeysInit } from '../implementation/galois-keys'\nimport { KeyGeneratorInit } from '../implementation/key-generator'\nimport { MemoryPoolHandleInit } from '../implementation/memory-pool-handle'\nimport { ModulusInit } from '../implementation/modulus'\nimport { ParmsIdTypeInit } from '../implementation/parms-id-type'\nimport { PlainTextInit } from '../implementation/plain-text'\nimport { PlainModulusInit } from '../implementation/plain-modulus'\nimport { PublicKeyInit } from '../implementation/public-key'\nimport { RelinKeysInit } from '../implementation/relin-keys'\nimport { SchemeTypeInit } from '../implementation/scheme-type'\nimport { SecretKeyInit } from '../implementation/secret-key'\nimport { SecurityLevelInit } from '../implementation/security-level'\nimport { SerializableInit } from '../implementation/serializable'\nimport { VectorInit } from '../implementation/vector'\nimport { Loader } from './loader'\n\n/**\n * Main export for the library\n */\nexport const SEAL = async (\n  Loader: () => Promise<Loader>\n): Promise<SEALLibrary> => {\n  const loader = await Loader()\n  return SEALConstructor({\n    BatchEncoder: BatchEncoderInit({\n      loader\n    }),\n    CipherText: CipherTextInit({\n      loader\n    }),\n    CKKSEncoder: CKKSEncoderInit({\n      loader\n    }),\n    CoeffModulus: CoeffModulusInit({\n      loader\n    }),\n    ComprModeType: ComprModeTypeInit({\n      loader\n    }),\n    ContextData: ContextDataInit({\n      loader\n    }),\n    Context: ContextInit({\n      loader\n    }),\n    Decryptor: DecryptorInit({\n      loader\n    }),\n    EncryptionParameterQualifiers: EncryptionParameterQualifiersInit(),\n    EncryptionParameters: EncryptionParametersInit({\n      loader\n    }),\n    Encryptor: EncryptorInit({\n      loader\n    }),\n    Evaluator: EvaluatorInit({\n      loader\n    }),\n    Exception: ExceptionInit({\n      loader\n    }),\n    GaloisKeys: GaloisKeysInit({\n      loader\n    }),\n    KeyGenerator: KeyGeneratorInit({\n      loader\n    }),\n    MemoryPoolHandle: MemoryPoolHandleInit({\n      loader\n    }),\n    Modulus: ModulusInit({\n      loader\n    }),\n    ParmsIdType: ParmsIdTypeInit({\n      loader\n    }),\n    PlainText: PlainTextInit({\n      loader\n    }),\n    PlainModulus: PlainModulusInit({\n      loader\n    }),\n    PublicKey: PublicKeyInit({\n      loader\n    }),\n    RelinKeys: RelinKeysInit({\n      loader\n    }),\n    SchemeType: SchemeTypeInit({\n      loader\n    }),\n    SecretKey: SecretKeyInit({\n      loader\n    }),\n    SecurityLevel: SecurityLevelInit({\n      loader\n    }),\n    Serializable: SerializableInit(),\n    Vector: VectorInit({\n      loader\n    })\n  })\n}\n","import {\n  BatchEncoderConstructorOptions,\n  BatchEncoderDependencies\n} from './batch-encoder'\nimport {\n  CipherTextConstructorOptions,\n  CipherTextDependencies\n} from './cipher-text'\nimport {\n  CKKSEncoderConstructorOptions,\n  CKKSEncoderDependencies\n} from './ckks-encoder'\nimport { CoeffModulus, CoeffModulusDependencies } from './coeff-modulus'\nimport { ComprModeType, ComprModeTypeDependencies } from './compr-mode-type'\nimport {\n  ContextDataConstructorOptions,\n  ContextDataDependencies\n} from './context-data'\nimport { ContextConstructorOptions, ContextDependencies } from './context'\nimport { DecryptorConstructorOptions, DecryptorDependencies } from './decryptor'\nimport {\n  EncryptionParameterQualifiersConstructorOptions,\n  EncryptionParameterQualifiersDependencies\n} from './encryption-parameter-qualifiers'\nimport {\n  EncryptionParametersConstructorOptions,\n  EncryptionParametersDependencies\n} from './encryption-parameters'\nimport { EncryptorConstructorOptions, EncryptorDependencies } from './encryptor'\nimport { EvaluatorConstructorOptions, EvaluatorDependencies } from './evaluator'\nimport { Exception, ExceptionDependencies } from './exception'\nimport {\n  GaloisKeysConstructorOptions,\n  GaloisKeysDependencies\n} from './galois-keys'\nimport {\n  MemoryPoolHandle,\n  MemoryPoolHandleDependencies\n} from './memory-pool-handle'\nimport { ModulusConstructorOptions, ModulusDependencies } from './modulus'\nimport {\n  ParmsIdTypeConstructorOptions,\n  ParmsIdTypeDependencies\n} from './parms-id-type'\nimport {\n  PlainTextConstructorOptions,\n  PlainTextDependencies\n} from './plain-text'\nimport { PlainModulus, PlainModulusDependencies } from './plain-modulus'\nimport {\n  PublicKeyConstructorOptions,\n  PublicKeyDependencies\n} from './public-key'\nimport {\n  RelinKeysConstructorOptions,\n  RelinKeysDependencies\n} from './relin-keys'\nimport { SchemeType, SchemeTypeDependencies } from './scheme-type'\nimport {\n  SecretKeyConstructorOptions,\n  SecretKeyDependencies\n} from './secret-key'\nimport { SecurityLevel, SecurityLevelDependencies } from './security-level'\nimport {\n  SerializableConstructorOptions,\n  SerializableDependencies\n} from './serializable'\nimport { VectorConstructorOptions, VectorDependencies } from './vector'\nimport {\n  KeyGeneratorConstructorOptions,\n  KeyGeneratorDependencies\n} from './key-generator'\n\nexport type Instance = any\nexport type Loader = any\nexport type Library = any\nexport type Dependencies = any\nexport type LoaderOptions = {\n  readonly loader: Loader\n}\n\nexport type SEALLibrary = {\n  readonly BatchEncoder: BatchEncoderConstructorOptions\n  readonly CipherText: CipherTextConstructorOptions\n  readonly CKKSEncoder: CKKSEncoderConstructorOptions\n  readonly CoeffModulus: CoeffModulus\n  readonly ComprModeType: ComprModeType\n  readonly ContextData: ContextDataConstructorOptions\n  readonly Context: ContextConstructorOptions\n  readonly Decryptor: DecryptorConstructorOptions\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersConstructorOptions\n  readonly EncryptionParameters: EncryptionParametersConstructorOptions\n  readonly Encryptor: EncryptorConstructorOptions\n  readonly Evaluator: EvaluatorConstructorOptions\n  readonly Exception: Exception\n  readonly GaloisKeys: GaloisKeysConstructorOptions\n  readonly KeyGenerator: KeyGeneratorConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Modulus: ModulusConstructorOptions\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly PlainText: PlainTextConstructorOptions\n  readonly PlainModulus: PlainModulus\n  readonly PublicKey: PublicKeyConstructorOptions\n  readonly RelinKeys: RelinKeysConstructorOptions\n  readonly SchemeType: SchemeType\n  readonly SecretKey: SecretKeyConstructorOptions\n  readonly SecurityLevel: SecurityLevel\n  readonly Serializable: SerializableConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\ntype SEALConstructorOptions = {\n  readonly BatchEncoder: BatchEncoderDependencies\n  readonly CipherText: CipherTextDependencies\n  readonly CKKSEncoder: CKKSEncoderDependencies\n  readonly CoeffModulus: CoeffModulusDependencies\n  readonly ComprModeType: ComprModeTypeDependencies\n  readonly ContextData: ContextDataDependencies\n  readonly Context: ContextDependencies\n  readonly Decryptor: DecryptorDependencies\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersDependencies\n  readonly EncryptionParameters: EncryptionParametersDependencies\n  readonly Encryptor: EncryptorDependencies\n  readonly Evaluator: EvaluatorDependencies\n  readonly Exception: ExceptionDependencies\n  readonly GaloisKeys: GaloisKeysDependencies\n  readonly KeyGenerator: KeyGeneratorDependencies\n  readonly MemoryPoolHandle: MemoryPoolHandleDependencies\n  readonly Modulus: ModulusDependencies\n  readonly ParmsIdType: ParmsIdTypeDependencies\n  readonly PlainText: PlainTextDependencies\n  readonly PlainModulus: PlainModulusDependencies\n  readonly PublicKey: PublicKeyDependencies\n  readonly RelinKeys: RelinKeysDependencies\n  readonly SchemeType: SchemeTypeDependencies\n  readonly SecretKey: SecretKeyDependencies\n  readonly SecurityLevel: SecurityLevelDependencies\n  readonly Serializable: SerializableDependencies\n  readonly Vector: VectorDependencies\n}\n\n/**\n * @implements SEAL\n */\nexport const SEALConstructor = ({\n  BatchEncoder,\n  CipherText,\n  CKKSEncoder,\n  CoeffModulus,\n  ComprModeType,\n  ContextData,\n  Context,\n  Decryptor,\n  EncryptionParameterQualifiers,\n  EncryptionParameters,\n  Encryptor,\n  Evaluator,\n  Exception,\n  GaloisKeys,\n  KeyGenerator,\n  MemoryPoolHandle,\n  Modulus,\n  ParmsIdType,\n  PlainText,\n  PlainModulus,\n  PublicKey,\n  RelinKeys,\n  SchemeType,\n  SecretKey,\n  SecurityLevel,\n  Serializable,\n  Vector\n}: SEALConstructorOptions): SEALLibrary => {\n  // Unfortunately, this library has nested depenencies\n  // so we need to load them in order.\n\n  // Define our singletons\n  const exception = Exception()()\n  const comprModeType = ComprModeType()()\n  const memoryPoolHandle = MemoryPoolHandle()()\n  const securityLevel = SecurityLevel()()\n  const schemeType = SchemeType()()\n\n  // Define our constructors (ORDER MATTERS)\n  const vector = Vector({ Exception: exception })\n  const coeffModulus = CoeffModulus({\n    Exception: exception,\n    SecurityLevel: securityLevel,\n    Vector: vector\n  })()\n  const modulus = Modulus({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const plainModulus = PlainModulus({\n    Exception: exception,\n    Modulus: modulus,\n    Vector: vector\n  })()\n  const serializable = Serializable({\n    Exception: exception,\n    Vector: vector,\n    ComprModeType: comprModeType\n  })\n  const parmsIdType = ParmsIdType({ Exception: exception })\n  const plainText = PlainText({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    ParmsIdType: parmsIdType,\n    MemoryPoolHandle: memoryPoolHandle,\n    Vector: vector\n  })\n  const cipherText = CipherText({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    ParmsIdType: parmsIdType,\n    MemoryPoolHandle: memoryPoolHandle,\n    Vector: vector\n  })\n  const batchEncoder = BatchEncoder({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    PlainText: plainText,\n    Vector: vector\n  })\n  const ckksEncoder = CKKSEncoder({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    PlainText: plainText,\n    Vector: vector\n  })\n  const encryptionParameterQualifiers = EncryptionParameterQualifiers()\n  const encryptionParameters = EncryptionParameters({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Modulus: modulus,\n    SchemeType: schemeType,\n    Vector: vector\n  })\n  const contextData = ContextData({\n    Exception: exception,\n    EncryptionParameters: encryptionParameters,\n    ParmsIdType: parmsIdType,\n    EncryptionParameterQualifiers: encryptionParameterQualifiers\n  })\n  const context = Context({\n    ParmsIdType: parmsIdType,\n    ContextData: contextData,\n    SecurityLevel: securityLevel\n  })\n  const decryptor = Decryptor({\n    Exception: exception,\n    PlainText: plainText\n  })\n  const encryptor = Encryptor({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    CipherText: cipherText,\n    Serializable: serializable\n  })\n  const evaluator = Evaluator({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    CipherText: cipherText,\n    PlainText: plainText\n  })\n  const publicKey = PublicKey({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const secretKey = SecretKey({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const relinKeys = RelinKeys({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const galoisKeys = GaloisKeys({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const keyGenerator = KeyGenerator({\n    Exception: exception,\n    PublicKey: publicKey,\n    SecretKey: secretKey,\n    RelinKeys: relinKeys,\n    GaloisKeys: galoisKeys,\n    Serializable: serializable\n  })\n\n  /**\n   * @interface SEAL\n   */\n  return {\n    BatchEncoder: batchEncoder,\n    CipherText: cipherText,\n    CKKSEncoder: ckksEncoder,\n    CoeffModulus: coeffModulus, // Singleton\n    ComprModeType: comprModeType, // Singleton\n    ContextData: contextData,\n    Context: context,\n    Decryptor: decryptor,\n    EncryptionParameterQualifiers: encryptionParameterQualifiers,\n    EncryptionParameters: encryptionParameters,\n    Encryptor: encryptor,\n    Evaluator: evaluator,\n    Exception: exception, // Singleton\n    GaloisKeys: galoisKeys,\n    KeyGenerator: keyGenerator,\n    MemoryPoolHandle: memoryPoolHandle, // Singleton\n    Modulus: modulus,\n    ParmsIdType: parmsIdType,\n    PlainText: plainText,\n    PlainModulus: plainModulus, // Singleton\n    PublicKey: publicKey,\n    RelinKeys: relinKeys,\n    SchemeType: schemeType,\n    SecretKey: secretKey,\n    SecurityLevel: securityLevel, // Singleton\n    Serializable: serializable,\n    Vector: vector\n  }\n}\n","import { Instance } from './seal'\nimport { SecurityLevel } from './security-level'\n\nexport type EncryptionParameterQualifiersDependencies = {\n  (): EncryptionParameterQualifiersConstructorOptions\n}\n\nexport type EncryptionParameterQualifiersConstructorOptions = {\n  (): EncryptionParameterQualifiers\n}\n\nexport type EncryptionParameterQualifiers = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly parametersSet: () => boolean\n  readonly usingFFT: boolean\n  readonly usingNTT: boolean\n  readonly usingBatching: boolean\n  readonly usingFastPlainLift: boolean\n  readonly usingDescendingModulusChain: boolean\n  readonly securityLevel: SecurityLevel\n}\n\nconst EncryptionParameterQualifiersConstructor = (): EncryptionParameterQualifiersDependencies => (): EncryptionParameterQualifiersConstructorOptions => (): EncryptionParameterQualifiers => {\n  let _instance: Instance\n  /**\n   * @implements EncryptionParameterQualifiers\n   */\n\n  /**\n   * @interface EncryptionParameterQualifiers\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name EncryptionParameterQualifiers#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name EncryptionParameterQualifiers#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name EncryptionParameterQualifiers#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * If the encryption parameters are set in a way that is considered valid by\n     * Microsoft SEAL, the variable parameters_set is set to true.\n     *\n     * @function\n     * @name EncryptionParameterQualifiers#parametersSet\n     * @type {boolean}\n     */\n    parametersSet() {\n      return _instance.parametersSet()\n    },\n\n    /**\n     * Tells whether FFT can be used for polynomial multiplication. If the\n     * polynomial modulus is of the form X^N+1, where N is a power of two, then\n     * FFT can be used for fast multiplication of polynomials modulo the polynomial\n     * modulus. In this case the variable using_fft will be set to true. However,\n     * currently Microsoft SEAL requires this to be the case for the parameters\n     * to be valid. Therefore, parameters_set can only be true if using_fft is\n     * true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingFFT\n     * @type {boolean}\n     */\n    get usingFFT() {\n      return _instance.usingFFT\n    },\n\n    /**\n     * Tells whether NTT can be used for polynomial multiplication. If the primes\n     * in the coefficient modulus are congruent to 1 modulo 2N, where X^N+1 is the\n     * polynomial modulus and N is a power of two, then the number-theoretic\n     * transform (NTT) can be used for fast multiplications of polynomials modulo\n     * the polynomial modulus and coefficient modulus. In this case the variable\n     * using_ntt will be set to true. However, currently Microsoft SEAL requires\n     * this to be the case for the parameters to be valid. Therefore, parameters_set\n     * can only be true if using_ntt is true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingNTT\n     * @type {boolean}\n     */\n    get usingNTT() {\n      return _instance.usingNTT\n    },\n\n    /**\n     * Tells whether batching is supported by the encryption parameters. If the\n     * plaintext modulus is congruent to 1 modulo 2N, where X^N+1 is the polynomial\n     * modulus and N is a power of two, then it is possible to use the BatchEncoder\n     * class to view plaintext elements as 2-by-(N/2) matrices of integers modulo\n     * the plaintext modulus. This is called batching, and allows the user to\n     * operate on the matrix elements (slots) in a SIMD fashion, and rotate the\n     * matrix rows and columns. When the computation is easily vectorizable, using\n     * batching can yield a huge performance boost. If the encryption parameters\n     * support batching, the variable using_batching is set to true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingBatching\n     * @type {boolean}\n     */\n    get usingBatching() {\n      return _instance.usingBatching\n    },\n\n    /**\n     * Tells whether fast plain lift is supported by the encryption parameters.\n     * A certain performance optimization in multiplication of a ciphertext by\n     * a plaintext (Evaluator::multiply_plain) and in transforming a plaintext\n     * element to NTT domain (Evaluator::transform_to_ntt) can be used when the\n     * plaintext modulus is smaller than each prime in the coefficient modulus.\n     * In this case the variable using_fast_plain_lift is set to true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingFastPlainLift\n     * @type {boolean}\n     */\n    get usingFastPlainLift() {\n      return _instance.usingFastPlainLift\n    },\n\n    /**\n     * Tells whether the coefficient modulus consists of a set of primes that\n     * are in decreasing order. If this is true, certain modular reductions in\n     * base conversion can be omitted, improving performance.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingDescendingModulusChain\n     * @type {boolean}\n     */\n    get usingDescendingModulusChain() {\n      return _instance.usingDescendingModulusChain\n    },\n\n    /**\n     * Tells whether the encryption parameters are secure based on the standard\n     * parameters from HomomorphicEncryption.org security standard.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#securityLevel\n     * @type {(SecurityLevel.none|SecurityLevel.tc128|SecurityLevel.tc192|SecurityLevel.tc256)}\n     */\n    get securityLevel() {\n      return _instance.securityLevel\n    }\n  }\n}\n\nexport const EncryptionParameterQualifiersInit = (): EncryptionParameterQualifiersDependencies => {\n  return EncryptionParameterQualifiersConstructor()\n}\n","import { Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\n\nexport type SerializableDependencyOptions = {\n  readonly Exception: Exception\n  readonly Vector: VectorConstructorOptions\n  readonly ComprModeType: ComprModeType\n}\n\nexport type SerializableDependencies = {\n  ({\n    Exception,\n    Vector,\n    ComprModeType\n  }: SerializableDependencyOptions): SerializableConstructorOptions\n}\n\nexport type SerializableConstructorOptions = {\n  (): Serializable\n}\n\nexport type Serializable = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n}\n\nconst SerializableConstructor = (): SerializableDependencies => ({\n  Exception,\n  Vector,\n  ComprModeType\n}: SerializableDependencyOptions): SerializableConstructorOptions => (): Serializable => {\n  let _instance: Instance\n\n  /**\n   * @implements Serializable\n   */\n\n  /**\n   * @interface Serializable\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Serializable#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Serializable#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Serializable#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save to a base64 string\n     *\n     * @function\n     * @name Serializable#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save as a binary Uint8Array\n     *\n     * @function\n     * @name Serializable#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the Serializable object in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    }\n  }\n}\n\nexport const SerializableInit = (): SerializableDependencies => {\n  return SerializableConstructor()\n}\n"],"names":["_scriptDir","Module","document","currentScript","src","undefined","__filename","h","aa","ba","ready","Promise","a","b","w","u","hasOwnProperty","ea","fa","ia","ja","ka","ca","da","__dirname","la","require","normalize","readFileSync","buffer","Uint8Array","x","process","argv","length","replace","slice","on","ma","exit","inspect","print","console","log","bind","na","z","printErr","warn","thisProgram","quit","wasmBinary","noExitRuntime","WebAssembly","oa","pa","qa","TextDecoder","ra","c","A","d","subarray","decode","e","g","String","fromCharCode","l","sa","charCodeAt","ta","Ba","E","C","B","D","F","Ca","Da","ua","va","wa","xa","ya","za","Aa","Ea","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","H","Fa","Ga","Ha","Ia","Ja","preRun","shift","unshift","I","La","onAbort","RuntimeError","Ma","Na","prototype","startsWith","indexOf","preloadedImages","preloadedAudios","J","Oa","locateFile","Qa","resolve","then","Pa","Ra","Ya","get","Sa","this","Ua","TypeError","Va","K","L","M","Wa","Xa","Function","Za","Error","name","message","stack","toString","Object","create","constructor","O","P","$a","ab","Q","k","m","R","forEach","Array","push","bb","Z","$","cb","db","eb","count","value","ga","fb","FinalizationGroup","next","done","unregister","register","gb","hb","ib","pop","S","jb","kb","arguments","apply","lb","mb","ha","nb","ob","T","pb","Ta","clone","U","qb","rb","fromWireType","sb","tb","vb","V","Ka","toWireType","wb","W","concat","call","xb","yb","zb","Ab","X","Y","map","join","Bb","Cb","Db","p","n","r","split","Eb","Fb","Gb","Hb","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Vb","Qb","Tb","Ub","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","Yb","Zb","$b","ac","bc","Date","getTime","getMonth","getFullYear","getDate","setDate","setMonth","setFullYear","cc","f","q","v","G","y","getDay","%c","%D","%F","%h","%r","%R","%T","%x","%X","%Ec","%EC","%Ex","%EX","%Ey","%EY","%Od","%Oe","%OH","%OI","%Om","%OM","%OS","%Ou","%OU","%OV","%Ow","%OW","%Oy","RegExp","t","%a","substring","%A","%b","%B","%C","%d","%e","%g","%G","%H","%I","%j","%m","%M","%n","%p","%S","%t","%u","%U","Math","ceil","%V","%w","%W","%y","%Y","%z","abs","%Z","%%","dc","set","ec","fc","Buffer","from","byteOffset","byteLength","BindingError","InternalError","isAliasOf","getPrototypeOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","ub","pointerType","getInheritedInstanceCount","keys","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","UnboundTypeError","count_emval_handles","get_first_emval","hc","gc","N","Ib","s","enumerable","configurable","defineProperty","className","values","o","ArrayBuffer","Uint8ClampedArray","i","Sb","Rb","j","copyWithin","min","max","grow","Xb","crypto","getRandomValues","randomBytes","Wb","asm","exports","monitorRunDependencies","instance","instantiate","instantiateWasm","instantiateStreaming","fetch","credentials","catch","___wasm_call_ctors","_main","___getTypeName","___embind_register_native_and_builtin_types","ic","_malloc","_free","status","kc","calledRun","onRuntimeInitialized","lc","onExit","postRun","setStatus","setTimeout","dynCall_vij","dynCall_iiiiiijj","dynCall_iiiiij","dynCall_iiiiijj","dynCall_viijii","dynCall_viij","jc","run","preInit","noInitialRun","UNSUPPORTED_VECTOR_TYPE","BatchEncoderInit","loader","library","Exception","MemoryPoolHandle","PlainText","Vector","context","Constructor","BatchEncoder","_instance","safe","[object Object]","delete","array","plainText","encode","plain","BigInt64Array","stringArray","BigUint64Array","signed","pool","global","tempVect","decodeInt32","unsafeInject","setType","tempArr","toArray","decodeUint32","decodeBigInt","slotCount","BatchEncoderConstructor","CipherTextConstructor","ComprModeType","ParmsIdType","parmsId","sizeCapacity","Ciphertext","construct","capacity","reserve","size","resize","release","coeffModulusSize","polyModulusDegree","isTransparent","isNttForm","parms","inject","scale","setScale","save","compression","zstd","saveToString","saveToArray","encoded","loadFromString","loadFromArray","cipher","copy","clonedInstance","move","CipherTextInit","CKKSEncoderInit","CKKSEncoder","decodeDouble","CKKSEncoderConstructor","CoeffModulusInit","SecurityLevel","_MaxBitCount","CoeffModulus","MaxBitCount","_BFVDefault","BFVDefault","_CreateFromArray","CreateFromArray","securityLevel","tc128","vectorModulus","bitSizes","CoeffModulusConstructor","ComprModeTypeInit","_none","none","_zlib","zlib","_zstd","ComprModeTypeConstructor","ContextDataConstructor","EncryptionParameters","EncryptionParameterQualifiers","encryptionParameters","qualifiers","encParmQualifiers","totalCoeffModulusBitCount","prevContextData","cxtData","nextContextData","chainIndex","ContextDataInit","ContextInit","ContextData","encryptionParams","expandModChain","SEALContext","toHuman","getContextData","contextData","keyContextData","firstContextData","lastContextData","parametersSet","keyParmsId","firstParmsId","lastParmsId","usingKeyswitching","ContextConstructor","DecryptorInit","secretKey","Decryptor","cipherText","decrypt","invariantNoiseBudget","DecryptorConstructor","EncryptionParametersInit","Modulus","SchemeType","schemeType","setPolyModulusDegree","coeffModulus","setCoeffModulus","plainModulus","setPlainModulus","scheme","smallModulus","BigInt","EncryptionParametersConstructor","EncryptorInit","CipherText","Serializable","publicKey","Encryptor","constructInstance","encrypt","temp","encryptSerializable","encryptSymmetric","serialized","encryptSymmetricSerializable","encryptZero","encryptZeroSerializable","EncryptorConstructor","EvaluatorInit","Evaluator","encrypted","destination","negate","add","sub","multiply","square","relinKeys","relinearize","cipherModSwitchToNext","cipherModSwitchTo","plainModSwitchToNext","plainModSwitchTo","rescaleToNext","rescaleTo","exponent","exponentiate","addPlain","subPlain","multiplyPlain","destinationNtt","plainTransformToNtt","cipherTransformToNtt","encryptedNtt","cipherTransformFromNtt","galoisElt","galoisKeys","applyGalois","steps","rotateRows","rotateColumns","rotateVector","complexConjugate","sumElements","newDest","EvaluatorConstructor","ExceptionInit","_getException","getException","error","ExceptionConstructor","GaloisKeysConstructor","GaloisKeys","getIndex","hasKey","key","GaloisKeysInit","KeyGeneratorInit","PublicKey","SecretKey","RelinKeys","KeyGenerator","createPublicKey","createPublicKeySerializable","createRelinKeys","createRelinKeysSerializable","createGaloisKeys","createGaloisKeysSerializable","KeyGeneratorConstructor","MemoryPoolHandleInit","_global","MemoryPoolHandleGlobal","_threadLocal","MemoryPoolHandleThreadLocal","threadLocal","MemoryPoolHandleConstructor","ModulusInit","inst","setValue","createModulus","bitCount","isZero","isPrime","ModulusConstructor","ParmsIdTypeInit","ParmsIdTypeConstructor","PlainTextConstructor","coeffCount","Plaintext","shrinkToFit","setZero","significantCoeffCount","nonzeroCoeffCount","toPolynomial","PlainTextInit","PlainModulusInit","_Batching","PlainModulus","Batching","_BatchingVector","BatchingVector","bitSize","smallMod","polyPlainModulusDegree","vectBitSizes","vect","PlainModulusConstructor","PublicKeyConstructor","PublicKeyInit","RelinKeysConstructor","keyPower","RelinKeysInit","SchemeTypeInit","_bfv","bfv","_ckks","ckks","SchemeTypeConstructor","SecretKeyConstructor","SecretKeyInit","SecurityLevelInit","SecLevelType","_tc128","_tc192","tc192","_tc256","tc256","SecurityLevelConstructor","VectorInit","_vecFromArrayUint8","vecFromArrayUint8","_vecFromArrayUint32","vecFromArrayUint32","_vecFromArrayInt32","vecFromArrayInt32","_vecFromArrayFloat64","vecFromArrayFloat64","_vecFromArrayBigInt64","vecFromArrayBigInt64","_vecFromArrayBigUint64","vecFromArrayBigUint64","_vecFromArrayModulus","vecFromArrayModulus","_jsArrayUint8FromVec","jsArrayUint8FromVec","_jsArrayUint32FromVec","jsArrayUint32FromVec","_jsArrayInt32FromVec","jsArrayInt32FromVec","_jsArrayFloat64FromVec","jsArrayFloat64FromVec","_jsArrayStringFromVecInt64","jsArrayStringFromVecInt64","_jsArrayStringFromVecUint64","jsArrayStringFromVecUint64","_jsArrayStringFromVecModulus","jsArrayStringFromVecModulus","_type","type","index","fill","VectorConstructor","async","bin","createLoader","sealLibrary","Loader","Context","exception","comprModeType","memoryPoolHandle","vector","modulus","serializable","parmsIdType","batchEncoder","ckksEncoder","encryptionParameterQualifiers","decryptor","encryptor","evaluator","SEALConstructor","usingFFT","usingNTT","usingBatching","usingFastPlainLift","usingDescendingModulusChain","SEAL"],"mappings":"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"}